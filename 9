def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var68 = func3(arg2, var7)
    var69 = 254 & ((arg2 & var68) | var68)
    var70 = 1033406983 | -927763429 | (-160033965 ^ 586)
    var71 = var68 & 312834057
    var72 = var70 - -503
    var73 = ((arg2 - var70) & var72) + var69
    var74 = (-800 & var68) & var7
    var75 = (var72 | var7 - arg2) ^ var73
    var76 = arg2 - (arg2 + arg1) + -1901428603
    var77 = var74 | var68
    var78 = (-1601437787 ^ var74) + var7 ^ var73
    var79 = var77 + var71 + var74 + var73
    var80 = var69 ^ 1117903259
    var81 = var80 | 1460375894
    result = var74 | (((var77 - (879597402 + (var71 & arg1) ^ var69 + var79 + var78 + var80) | var75) - var70) ^ var79)
    return result
def func3(arg8, arg9):
    var14 = func4(arg9, arg8)
    def func5(arg15, arg16):
        var17 = arg8 & arg16
        var18 = arg8 ^ (1162160567 & var17) ^ arg15
        if arg15 < var14:
            var19 = arg15 + arg16
        else:
            var19 = arg15 + arg8 ^ var14 & arg9
        var20 = (arg9 - 196) - var17 - arg8
        var21 = arg8 & arg15
        var22 = var14 | arg15 + arg15
        var23 = arg16 + var22 | var20 - var22
        var24 = (-42074120 & arg8 - var17) + var23
        var25 = var20 - -160194532 | var18 ^ var17
        var26 = var22 | var20
        var27 = 908 | ((arg8 + -775) ^ var22)
        var28 = arg8 ^ var18 | var17
        var29 = arg9 ^ arg8 | 663
        var30 = (var26 ^ var22 | var24) | var29
        var31 = var24 + var20
        var32 = var23 & var17
        var33 = 315549335 & var17
        if var18 < var33:
            var34 = var22 & -891 | -2063237487 | var20
        else:
            var34 = (var32 ^ var29) & var30
        var35 = arg8 | var24
        var36 = 2033393805 - var24
        var37 = var32 + var30 | var29 - var36
        var38 = var21 - var36
        var39 = var26 - var28 & arg16 + var37
        var40 = var24 & (arg16 | var35) - arg9
        var41 = var18 - var26 & var18
        result = ((var31 | (var17 - var22 - (var35 | var14 - var32 & var21 ^ var37 ^ var40) | var23)) - var37) - var20
        return result
    var42 = func5(arg8, var14)
    var43 = -191353557 | (1470922617 ^ arg9)
    var44 = -246 + arg8 + arg9 & -239
    var45 = (546659885 - var43 ^ arg9) + arg8
    var46 = 710908187 - var42 & (var14 & var44)
    if var44 < var44:
        var47 = (arg8 - arg9) ^ var14
    else:
        var47 = var45 | var46 - var42 | var44
    var48 = var46 | var44 & (var46 ^ arg8)
    var49 = var45 + var45
    var50 = var14 + (var48 ^ var43)
    var51 = var44 - var49
    var52 = var48 ^ (-2114736290 ^ var49 ^ -702)
    var53 = var49 | var49
    var54 = var48 | var53
    var55 = var48 & var51
    if var51 < var46:
        var56 = var52 & (var45 & var54)
    else:
        var56 = var50 - var49 ^ 705152834
    var57 = var50 | ((var44 - arg9) ^ var49)
    var58 = var45 & (var42 - var48 & var50)
    var59 = var48 ^ var45 & (var51 & var42)
    var60 = (var51 & var53) ^ var52 + var44
    var61 = var14 ^ var53 ^ var53
    var62 = var50 ^ var48
    var63 = arg9 | var49
    var64 = 1473945669 + var57
    var65 = ((var57 - var42) + var63) & var43
    var66 = var61 | var55
    var67 = var14 + -835 & var62
    result = (var14 ^ (var49 | var14)) | var14 & -210
    return result
def func4(arg10, arg11):
    var12 = 0
    for var13 in [6 + (i & i) for i in xrange(22)]:
        var12 += (var13 - arg11) ^ arg10
    return var12
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(45):
        var5 += arg4 | var5
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var68 = func3(arg2, var7)
    var69 = 254 & ((arg2 & var68) | var68)
    var70 = 1033406983 | -927763429 | (-160033965 ^ 586)
    var71 = var68 & 312834057
    var72 = var70 - -503
    var73 = ((arg2 - var70) & var72) + var69
    var74 = (-800 & var68) & var7
    var75 = (var72 | var7 - arg2) ^ var73
    var76 = arg2 - (arg2 + arg1) + -1901428603
    var77 = var74 | var68
    var78 = (-1601437787 ^ var74) + var7 ^ var73
    var79 = var77 + var71 + var74 + var73
    var80 = var69 ^ 1117903259
    var81 = var80 | 1460375894
    result = var74 | (((var77 - (879597402 + (var71 & arg1) ^ var69 + var79 + var78 + var80) | var75) - var70) ^ var79)
    return result
def func3(arg8, arg9):
    var14 = func4(arg9, arg8)
    def func5(arg15, arg16):
        var17 = arg8 & arg16
        var18 = arg8 ^ (1162160567 & var17) ^ arg15
        if arg15 < var14:
            var19 = arg15 + arg16
        else:
            var19 = arg15 + arg8 ^ var14 & arg9
        var20 = (arg9 - 196) - var17 - arg8
        var21 = arg8 & arg15
        var22 = var14 | arg15 + arg15
        var23 = arg16 + var22 | var20 - var22
        var24 = (-42074120 & arg8 - var17) + var23
        var25 = var20 - -160194532 | var18 ^ var17
        var26 = var22 | var20
        var27 = 908 | ((arg8 + -775) ^ var22)
        var28 = arg8 ^ var18 | var17
        var29 = arg9 ^ arg8 | 663
        var30 = (var26 ^ var22 | var24) | var29
        var31 = var24 + var20
        var32 = var23 & var17
        var33 = 315549335 & var17
        if var18 < var33:
            var34 = var22 & -891 | -2063237487 | var20
        else:
            var34 = (var32 ^ var29) & var30
        var35 = arg8 | var24
        var36 = 2033393805 - var24
        var37 = var32 + var30 | var29 - var36
        var38 = var21 - var36
        var39 = var26 - var28 & arg16 + var37
        var40 = var24 & (arg16 | var35) - arg9
        var41 = var18 - var26 & var18
        result = ((var31 | (var17 - var22 - (var35 | var14 - var32 & var21 ^ var37 ^ var40) | var23)) - var37) - var20
        return result
    var42 = func5(arg8, var14)
    var43 = -191353557 | (1470922617 ^ arg9)
    var44 = -246 + arg8 + arg9 & -239
    var45 = (546659885 - var43 ^ arg9) + arg8
    var46 = 710908187 - var42 & (var14 & var44)
    if var44 < var44:
        var47 = (arg8 - arg9) ^ var14
    else:
        var47 = var45 | var46 - var42 | var44
    var48 = var46 | var44 & (var46 ^ arg8)
    var49 = var45 + var45
    var50 = var14 + (var48 ^ var43)
    var51 = var44 - var49
    var52 = var48 ^ (-2114736290 ^ var49 ^ -702)
    var53 = var49 | var49
    var54 = var48 | var53
    var55 = var48 & var51
    if var51 < var46:
        var56 = var52 & (var45 & var54)
    else:
        var56 = var50 - var49 ^ 705152834
    var57 = var50 | ((var44 - arg9) ^ var49)
    var58 = var45 & (var42 - var48 & var50)
    var59 = var48 ^ var45 & (var51 & var42)
    var60 = (var51 & var53) ^ var52 + var44
    var61 = var14 ^ var53 ^ var53
    var62 = var50 ^ var48
    var63 = arg9 | var49
    var64 = 1473945669 + var57
    var65 = ((var57 - var42) + var63) & var43
    var66 = var61 | var55
    var67 = var14 + -835 & var62
    result = (var14 ^ (var49 | var14)) | var14 & -210
    return result
def func4(arg10, arg11):
    var12 = 0
    for var13 in [6 + (i & i) for i in xrange(22)]:
        var12 += (var13 - arg11) ^ arg10
    return var12
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(45):
        var5 += arg4 | var5
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var68 = func3(arg2, var7)
    var69 = 254 & ((arg2 & var68) | var68)
    var70 = 1033406983 | -927763429 | (-160033965 ^ 586)
    var71 = var68 & 312834057
    var72 = var70 - -503
    var73 = ((arg2 - var70) & var72) + var69
    var74 = (-800 & var68) & var7
    var75 = (var72 | var7 - arg2) ^ var73
    var76 = arg2 - (arg2 + arg1) + -1901428603
    var77 = var74 | var68
    var78 = (-1601437787 ^ var74) + var7 ^ var73
    var79 = var77 + var71 + var74 + var73
    var80 = var69 ^ 1117903259
    var81 = var80 | 1460375894
    result = var74 | (((var77 - (879597402 + (var71 & arg1) ^ var69 + var79 + var78 + var80) | var75) - var70) ^ var79)
    return result
def func3(arg8, arg9):
    var14 = func4(arg9, arg8)
    def func5(arg15, arg16):
        var17 = arg8 & arg16
        var18 = arg8 ^ (1162160567 & var17) ^ arg15
        if arg15 < var14:
            var19 = arg15 + arg16
        else:
            var19 = arg15 + arg8 ^ var14 & arg9
        var20 = (arg9 - 196) - var17 - arg8
        var21 = arg8 & arg15
        var22 = var14 | arg15 + arg15
        var23 = arg16 + var22 | var20 - var22
        var24 = (-42074120 & arg8 - var17) + var23
        var25 = var20 - -160194532 | var18 ^ var17
        var26 = var22 | var20
        var27 = 908 | ((arg8 + -775) ^ var22)
        var28 = arg8 ^ var18 | var17
        var29 = arg9 ^ arg8 | 663
        var30 = (var26 ^ var22 | var24) | var29
        var31 = var24 + var20
        var32 = var23 & var17
        var33 = 315549335 & var17
        if var18 < var33:
            var34 = var22 & -891 | -2063237487 | var20
        else:
            var34 = (var32 ^ var29) & var30
        var35 = arg8 | var24
        var36 = 2033393805 - var24
        var37 = var32 + var30 | var29 - var36
        var38 = var21 - var36
        var39 = var26 - var28 & arg16 + var37
        var40 = var24 & (arg16 | var35) - arg9
        var41 = var18 - var26 & var18
        result = ((var31 | (var17 - var22 - (var35 | var14 - var32 & var21 ^ var37 ^ var40) | var23)) - var37) - var20
        return result
    var42 = func5(arg8, var14)
    var43 = -191353557 | (1470922617 ^ arg9)
    var44 = -246 + arg8 + arg9 & -239
    var45 = (546659885 - var43 ^ arg9) + arg8
    var46 = 710908187 - var42 & (var14 & var44)
    if var44 < var44:
        var47 = (arg8 - arg9) ^ var14
    else:
        var47 = var45 | var46 - var42 | var44
    var48 = var46 | var44 & (var46 ^ arg8)
    var49 = var45 + var45
    var50 = var14 + (var48 ^ var43)
    var51 = var44 - var49
    var52 = var48 ^ (-2114736290 ^ var49 ^ -702)
    var53 = var49 | var49
    var54 = var48 | var53
    var55 = var48 & var51
    if var51 < var46:
        var56 = var52 & (var45 & var54)
    else:
        var56 = var50 - var49 ^ 705152834
    var57 = var50 | ((var44 - arg9) ^ var49)
    var58 = var45 & (var42 - var48 & var50)
    var59 = var48 ^ var45 & (var51 & var42)
    var60 = (var51 & var53) ^ var52 + var44
    var61 = var14 ^ var53 ^ var53
    var62 = var50 ^ var48
    var63 = arg9 | var49
    var64 = 1473945669 + var57
    var65 = ((var57 - var42) + var63) & var43
    var66 = var61 | var55
    var67 = var14 + -835 & var62
    result = (var14 ^ (var49 | var14)) | var14 & -210
    return result
def func4(arg10, arg11):
    var12 = 0
    for var13 in [6 + (i & i) for i in xrange(22)]:
        var12 += (var13 - arg11) ^ arg10
    return var12
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(45):
        var5 += arg4 | var5
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var68 = func3(arg2, var7)
    var69 = 254 & ((arg2 & var68) | var68)
    var70 = 1033406983 | -927763429 | (-160033965 ^ 586)
    var71 = var68 & 312834057
    var72 = var70 - -503
    var73 = ((arg2 - var70) & var72) + var69
    var74 = (-800 & var68) & var7
    var75 = (var72 | var7 - arg2) ^ var73
    var76 = arg2 - (arg2 + arg1) + -1901428603
    var77 = var74 | var68
    var78 = (-1601437787 ^ var74) + var7 ^ var73
    var79 = var77 + var71 + var74 + var73
    var80 = var69 ^ 1117903259
    var81 = var80 | 1460375894
    result = var74 | (((var77 - (879597402 + (var71 & arg1) ^ var69 + var79 + var78 + var80) | var75) - var70) ^ var79)
    return result
def func3(arg8, arg9):
    var14 = func4(arg9, arg8)
    def func5(arg15, arg16):
        var17 = arg8 & arg16
        var18 = arg8 ^ (1162160567 & var17) ^ arg15
        if arg15 < var14:
            var19 = arg15 + arg16
        else:
            var19 = arg15 + arg8 ^ var14 & arg9
        var20 = (arg9 - 196) - var17 - arg8
        var21 = arg8 & arg15
        var22 = var14 | arg15 + arg15
        var23 = arg16 + var22 | var20 - var22
        var24 = (-42074120 & arg8 - var17) + var23
        var25 = var20 - -160194532 | var18 ^ var17
        var26 = var22 | var20
        var27 = 908 | ((arg8 + -775) ^ var22)
        var28 = arg8 ^ var18 | var17
        var29 = arg9 ^ arg8 | 663
        var30 = (var26 ^ var22 | var24) | var29
        var31 = var24 + var20
        var32 = var23 & var17
        var33 = 315549335 & var17
        if var18 < var33:
            var34 = var22 & -891 | -2063237487 | var20
        else:
            var34 = (var32 ^ var29) & var30
        var35 = arg8 | var24
        var36 = 2033393805 - var24
        var37 = var32 + var30 | var29 - var36
        var38 = var21 - var36
        var39 = var26 - var28 & arg16 + var37
        var40 = var24 & (arg16 | var35) - arg9
        var41 = var18 - var26 & var18
        result = ((var31 | (var17 - var22 - (var35 | var14 - var32 & var21 ^ var37 ^ var40) | var23)) - var37) - var20
        return result
    var42 = func5(arg8, var14)
    var43 = -191353557 | (1470922617 ^ arg9)
    var44 = -246 + arg8 + arg9 & -239
    var45 = (546659885 - var43 ^ arg9) + arg8
    var46 = 710908187 - var42 & (var14 & var44)
    if var44 < var44:
        var47 = (arg8 - arg9) ^ var14
    else:
        var47 = var45 | var46 - var42 | var44
    var48 = var46 | var44 & (var46 ^ arg8)
    var49 = var45 + var45
    var50 = var14 + (var48 ^ var43)
    var51 = var44 - var49
    var52 = var48 ^ (-2114736290 ^ var49 ^ -702)
    var53 = var49 | var49
    var54 = var48 | var53
    var55 = var48 & var51
    if var51 < var46:
        var56 = var52 & (var45 & var54)
    else:
        var56 = var50 - var49 ^ 705152834
    var57 = var50 | ((var44 - arg9) ^ var49)
    var58 = var45 & (var42 - var48 & var50)
    var59 = var48 ^ var45 & (var51 & var42)
    var60 = (var51 & var53) ^ var52 + var44
    var61 = var14 ^ var53 ^ var53
    var62 = var50 ^ var48
    var63 = arg9 | var49
    var64 = 1473945669 + var57
    var65 = ((var57 - var42) + var63) & var43
    var66 = var61 | var55
    var67 = var14 + -835 & var62
    result = (var14 ^ (var49 | var14)) | var14 & -210
    return result
def func4(arg10, arg11):
    var12 = 0
    for var13 in [6 + (i & i) for i in xrange(22)]:
        var12 += (var13 - arg11) ^ arg10
    return var12
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(45):
        var5 += arg4 | var5
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var68 = func3(arg2, var7)
    var69 = 254 & ((arg2 & var68) | var68)
    var70 = 1033406983 | -927763429 | (-160033965 ^ 586)
    var71 = var68 & 312834057
    var72 = var70 - -503
    var73 = ((arg2 - var70) & var72) + var69
    var74 = (-800 & var68) & var7
    var75 = (var72 | var7 - arg2) ^ var73
    var76 = arg2 - (arg2 + arg1) + -1901428603
    var77 = var74 | var68
    var78 = (-1601437787 ^ var74) + var7 ^ var73
    var79 = var77 + var71 + var74 + var73
    var80 = var69 ^ 1117903259
    var81 = var80 | 1460375894
    result = var74 | (((var77 - (879597402 + (var71 & arg1) ^ var69 + var79 + var78 + var80) | var75) - var70) ^ var79)
    return result
def func3(arg8, arg9):
    var14 = func4(arg9, arg8)
    def func5(arg15, arg16):
        var17 = arg8 & arg16
        var18 = arg8 ^ (1162160567 & var17) ^ arg15
        if arg15 < var14:
            var19 = arg15 + arg16
        else:
            var19 = arg15 + arg8 ^ var14 & arg9
        var20 = (arg9 - 196) - var17 - arg8
        var21 = arg8 & arg15
        var22 = var14 | arg15 + arg15
        var23 = arg16 + var22 | var20 - var22
        var24 = (-42074120 & arg8 - var17) + var23
        var25 = var20 - -160194532 | var18 ^ var17
        var26 = var22 | var20
        var27 = 908 | ((arg8 + -775) ^ var22)
        var28 = arg8 ^ var18 | var17
        var29 = arg9 ^ arg8 | 663
        var30 = (var26 ^ var22 | var24) | var29
        var31 = var24 + var20
        var32 = var23 & var17
        var33 = 315549335 & var17
        if var18 < var33:
            var34 = var22 & -891 | -2063237487 | var20
        else:
            var34 = (var32 ^ var29) & var30
        var35 = arg8 | var24
        var36 = 2033393805 - var24
        var37 = var32 + var30 | var29 - var36
        var38 = var21 - var36
        var39 = var26 - var28 & arg16 + var37
        var40 = var24 & (arg16 | var35) - arg9
        var41 = var18 - var26 & var18
        result = ((var31 | (var17 - var22 - (var35 | var14 - var32 & var21 ^ var37 ^ var40) | var23)) - var37) - var20
        return result
    var42 = func5(arg8, var14)
    var43 = -191353557 | (1470922617 ^ arg9)
    var44 = -246 + arg8 + arg9 & -239
    var45 = (546659885 - var43 ^ arg9) + arg8
    var46 = 710908187 - var42 & (var14 & var44)
    if var44 < var44:
        var47 = (arg8 - arg9) ^ var14
    else:
        var47 = var45 | var46 - var42 | var44
    var48 = var46 | var44 & (var46 ^ arg8)
    var49 = var45 + var45
    var50 = var14 + (var48 ^ var43)
    var51 = var44 - var49
    var52 = var48 ^ (-2114736290 ^ var49 ^ -702)
    var53 = var49 | var49
    var54 = var48 | var53
    var55 = var48 & var51
    if var51 < var46:
        var56 = var52 & (var45 & var54)
    else:
        var56 = var50 - var49 ^ 705152834
    var57 = var50 | ((var44 - arg9) ^ var49)
    var58 = var45 & (var42 - var48 & var50)
    var59 = var48 ^ var45 & (var51 & var42)
    var60 = (var51 & var53) ^ var52 + var44
    var61 = var14 ^ var53 ^ var53
    var62 = var50 ^ var48
    var63 = arg9 | var49
    var64 = 1473945669 + var57
    var65 = ((var57 - var42) + var63) & var43
    var66 = var61 | var55
    var67 = var14 + -835 & var62
    result = (var14 ^ (var49 | var14)) | var14 & -210
    return result
def func4(arg10, arg11):
    var12 = 0
    for var13 in [6 + (i & i) for i in xrange(22)]:
        var12 += (var13 - arg11) ^ arg10
    return var12
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(45):
        var5 += arg4 | var5
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var68 = func3(arg2, var7)
    var69 = 254 & ((arg2 & var68) | var68)
    var70 = 1033406983 | -927763429 | (-160033965 ^ 586)
    var71 = var68 & 312834057
    var72 = var70 - -503
    var73 = ((arg2 - var70) & var72) + var69
    var74 = (-800 & var68) & var7
    var75 = (var72 | var7 - arg2) ^ var73
    var76 = arg2 - (arg2 + arg1) + -1901428603
    var77 = var74 | var68
    var78 = (-1601437787 ^ var74) + var7 ^ var73
    var79 = var77 + var71 + var74 + var73
    var80 = var69 ^ 1117903259
    var81 = var80 | 1460375894
    result = var74 | (((var77 - (879597402 + (var71 & arg1) ^ var69 + var79 + var78 + var80) | var75) - var70) ^ var79)
    return result
def func3(arg8, arg9):
    var14 = func4(arg9, arg8)
    def func5(arg15, arg16):
        var17 = arg8 & arg16
        var18 = arg8 ^ (1162160567 & var17) ^ arg15
        if arg15 < var14:
            var19 = arg15 + arg16
        else:
            var19 = arg15 + arg8 ^ var14 & arg9
        var20 = (arg9 - 196) - var17 - arg8
        var21 = arg8 & arg15
        var22 = var14 | arg15 + arg15
        var23 = arg16 + var22 | var20 - var22
        var24 = (-42074120 & arg8 - var17) + var23
        var25 = var20 - -160194532 | var18 ^ var17
        var26 = var22 | var20
        var27 = 908 | ((arg8 + -775) ^ var22)
        var28 = arg8 ^ var18 | var17
        var29 = arg9 ^ arg8 | 663
        var30 = (var26 ^ var22 | var24) | var29
        var31 = var24 + var20
        var32 = var23 & var17
        var33 = 315549335 & var17
        if var18 < var33:
            var34 = var22 & -891 | -2063237487 | var20
        else:
            var34 = (var32 ^ var29) & var30
        var35 = arg8 | var24
        var36 = 2033393805 - var24
        var37 = var32 + var30 | var29 - var36
        var38 = var21 - var36
        var39 = var26 - var28 & arg16 + var37
        var40 = var24 & (arg16 | var35) - arg9
        var41 = var18 - var26 & var18
        result = ((var31 | (var17 - var22 - (var35 | var14 - var32 & var21 ^ var37 ^ var40) | var23)) - var37) - var20
        return result
    var42 = func5(arg8, var14)
    var43 = -191353557 | (1470922617 ^ arg9)
    var44 = -246 + arg8 + arg9 & -239
    var45 = (546659885 - var43 ^ arg9) + arg8
    var46 = 710908187 - var42 & (var14 & var44)
    if var44 < var44:
        var47 = (arg8 - arg9) ^ var14
    else:
        var47 = var45 | var46 - var42 | var44
    var48 = var46 | var44 & (var46 ^ arg8)
    var49 = var45 + var45
    var50 = var14 + (var48 ^ var43)
    var51 = var44 - var49
    var52 = var48 ^ (-2114736290 ^ var49 ^ -702)
    var53 = var49 | var49
    var54 = var48 | var53
    var55 = var48 & var51
    if var51 < var46:
        var56 = var52 & (var45 & var54)
    else:
        var56 = var50 - var49 ^ 705152834
    var57 = var50 | ((var44 - arg9) ^ var49)
    var58 = var45 & (var42 - var48 & var50)
    var59 = var48 ^ var45 & (var51 & var42)
    var60 = (var51 & var53) ^ var52 + var44
    var61 = var14 ^ var53 ^ var53
    var62 = var50 ^ var48
    var63 = arg9 | var49
    var64 = 1473945669 + var57
    var65 = ((var57 - var42) + var63) & var43
    var66 = var61 | var55
    var67 = var14 + -835 & var62
    result = (var14 ^ (var49 | var14)) | var14 & -210
    return result
def func4(arg10, arg11):
    var12 = 0
    for var13 in [6 + (i & i) for i in xrange(22)]:
        var12 += (var13 - arg11) ^ arg10
    return var12
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(45):
        var5 += arg4 | var5
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var68 = func3(arg2, var7)
    var69 = 254 & ((arg2 & var68) | var68)
    var70 = 1033406983 | -927763429 | (-160033965 ^ 586)
    var71 = var68 & 312834057
    var72 = var70 - -503
    var73 = ((arg2 - var70) & var72) + var69
    var74 = (-800 & var68) & var7
    var75 = (var72 | var7 - arg2) ^ var73
    var76 = arg2 - (arg2 + arg1) + -1901428603
    var77 = var74 | var68
    var78 = (-1601437787 ^ var74) + var7 ^ var73
    var79 = var77 + var71 + var74 + var73
    var80 = var69 ^ 1117903259
    var81 = var80 | 1460375894
    result = var74 | (((var77 - (879597402 + (var71 & arg1) ^ var69 + var79 + var78 + var80) | var75) - var70) ^ var79)
    return result
def func3(arg8, arg9):
    var14 = func4(arg9, arg8)
    def func5(arg15, arg16):
        var17 = arg8 & arg16
        var18 = arg8 ^ (1162160567 & var17) ^ arg15
        if arg15 < var14:
            var19 = arg15 + arg16
        else:
            var19 = arg15 + arg8 ^ var14 & arg9
        var20 = (arg9 - 196) - var17 - arg8
        var21 = arg8 & arg15
        var22 = var14 | arg15 + arg15
        var23 = arg16 + var22 | var20 - var22
        var24 = (-42074120 & arg8 - var17) + var23
        var25 = var20 - -160194532 | var18 ^ var17
        var26 = var22 | var20
        var27 = 908 | ((arg8 + -775) ^ var22)
        var28 = arg8 ^ var18 | var17
        var29 = arg9 ^ arg8 | 663
        var30 = (var26 ^ var22 | var24) | var29
        var31 = var24 + var20
        var32 = var23 & var17
        var33 = 315549335 & var17
        if var18 < var33:
            var34 = var22 & -891 | -2063237487 | var20
        else:
            var34 = (var32 ^ var29) & var30
        var35 = arg8 | var24
        var36 = 2033393805 - var24
        var37 = var32 + var30 | var29 - var36
        var38 = var21 - var36
        var39 = var26 - var28 & arg16 + var37
        var40 = var24 & (arg16 | var35) - arg9
        var41 = var18 - var26 & var18
        result = ((var31 | (var17 - var22 - (var35 | var14 - var32 & var21 ^ var37 ^ var40) | var23)) - var37) - var20
        return result
    var42 = func5(arg8, var14)
    var43 = -191353557 | (1470922617 ^ arg9)
    var44 = -246 + arg8 + arg9 & -239
    var45 = (546659885 - var43 ^ arg9) + arg8
    var46 = 710908187 - var42 & (var14 & var44)
    if var44 < var44:
        var47 = (arg8 - arg9) ^ var14
    else:
        var47 = var45 | var46 - var42 | var44
    var48 = var46 | var44 & (var46 ^ arg8)
    var49 = var45 + var45
    var50 = var14 + (var48 ^ var43)
    var51 = var44 - var49
    var52 = var48 ^ (-2114736290 ^ var49 ^ -702)
    var53 = var49 | var49
    var54 = var48 | var53
    var55 = var48 & var51
    if var51 < var46:
        var56 = var52 & (var45 & var54)
    else:
        var56 = var50 - var49 ^ 705152834
    var57 = var50 | ((var44 - arg9) ^ var49)
    var58 = var45 & (var42 - var48 & var50)
    var59 = var48 ^ var45 & (var51 & var42)
    var60 = (var51 & var53) ^ var52 + var44
    var61 = var14 ^ var53 ^ var53
    var62 = var50 ^ var48
    var63 = arg9 | var49
    var64 = 1473945669 + var57
    var65 = ((var57 - var42) + var63) & var43
    var66 = var61 | var55
    var67 = var14 + -835 & var62
    result = (var14 ^ (var49 | var14)) | var14 & -210
    return result
def func4(arg10, arg11):
    var12 = 0
    for var13 in [6 + (i & i) for i in xrange(22)]:
        var12 += (var13 - arg11) ^ arg10
    return var12
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(45):
        var5 += arg4 | var5
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var68 = func3(arg2, var7)
    var69 = 254 & ((arg2 & var68) | var68)
    var70 = 1033406983 | -927763429 | (-160033965 ^ 586)
    var71 = var68 & 312834057
    var72 = var70 - -503
    var73 = ((arg2 - var70) & var72) + var69
    var74 = (-800 & var68) & var7
    var75 = (var72 | var7 - arg2) ^ var73
    var76 = arg2 - (arg2 + arg1) + -1901428603
    var77 = var74 | var68
    var78 = (-1601437787 ^ var74) + var7 ^ var73
    var79 = var77 + var71 + var74 + var73
    var80 = var69 ^ 1117903259
    var81 = var80 | 1460375894
    result = var74 | (((var77 - (879597402 + (var71 & arg1) ^ var69 + var79 + var78 + var80) | var75) - var70) ^ var79)
    return result
def func3(arg8, arg9):
    var14 = func4(arg9, arg8)
    def func5(arg15, arg16):
        var17 = arg8 & arg16
        var18 = arg8 ^ (1162160567 & var17) ^ arg15
        if arg15 < var14:
            var19 = arg15 + arg16
        else:
            var19 = arg15 + arg8 ^ var14 & arg9
        var20 = (arg9 - 196) - var17 - arg8
        var21 = arg8 & arg15
        var22 = var14 | arg15 + arg15
        var23 = arg16 + var22 | var20 - var22
        var24 = (-42074120 & arg8 - var17) + var23
        var25 = var20 - -160194532 | var18 ^ var17
        var26 = var22 | var20
        var27 = 908 | ((arg8 + -775) ^ var22)
        var28 = arg8 ^ var18 | var17
        var29 = arg9 ^ arg8 | 663
        var30 = (var26 ^ var22 | var24) | var29
        var31 = var24 + var20
        var32 = var23 & var17
        var33 = 315549335 & var17
        if var18 < var33:
            var34 = var22 & -891 | -2063237487 | var20
        else:
            var34 = (var32 ^ var29) & var30
        var35 = arg8 | var24
        var36 = 2033393805 - var24
        var37 = var32 + var30 | var29 - var36
        var38 = var21 - var36
        var39 = var26 - var28 & arg16 + var37
        var40 = var24 & (arg16 | var35) - arg9
        var41 = var18 - var26 & var18
        result = ((var31 | (var17 - var22 - (var35 | var14 - var32 & var21 ^ var37 ^ var40) | var23)) - var37) - var20
        return result
    var42 = func5(arg8, var14)
    var43 = -191353557 | (1470922617 ^ arg9)
    var44 = -246 + arg8 + arg9 & -239
    var45 = (546659885 - var43 ^ arg9) + arg8
    var46 = 710908187 - var42 & (var14 & var44)
    if var44 < var44:
        var47 = (arg8 - arg9) ^ var14
    else:
        var47 = var45 | var46 - var42 | var44
    var48 = var46 | var44 & (var46 ^ arg8)
    var49 = var45 + var45
    var50 = var14 + (var48 ^ var43)
    var51 = var44 - var49
    var52 = var48 ^ (-2114736290 ^ var49 ^ -702)
    var53 = var49 | var49
    var54 = var48 | var53
    var55 = var48 & var51
    if var51 < var46:
        var56 = var52 & (var45 & var54)
    else:
        var56 = var50 - var49 ^ 705152834
    var57 = var50 | ((var44 - arg9) ^ var49)
    var58 = var45 & (var42 - var48 & var50)
    var59 = var48 ^ var45 & (var51 & var42)
    var60 = (var51 & var53) ^ var52 + var44
    var61 = var14 ^ var53 ^ var53
    var62 = var50 ^ var48
    var63 = arg9 | var49
    var64 = 1473945669 + var57
    var65 = ((var57 - var42) + var63) & var43
    var66 = var61 | var55
    var67 = var14 + -835 & var62
    result = (var14 ^ (var49 | var14)) | var14 & -210
    return result
def func4(arg10, arg11):
    var12 = 0
    for var13 in [6 + (i & i) for i in xrange(22)]:
        var12 += (var13 - arg11) ^ arg10
    return var12
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(45):
        var5 += arg4 | var5
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var68 = func3(arg2, var7)
    var69 = 254 & ((arg2 & var68) | var68)
    var70 = 1033406983 | -927763429 | (-160033965 ^ 586)
    var71 = var68 & 312834057
    var72 = var70 - -503
    var73 = ((arg2 - var70) & var72) + var69
    var74 = (-800 & var68) & var7
    var75 = (var72 | var7 - arg2) ^ var73
    var76 = arg2 - (arg2 + arg1) + -1901428603
    var77 = var74 | var68
    var78 = (-1601437787 ^ var74) + var7 ^ var73
    var79 = var77 + var71 + var74 + var73
    var80 = var69 ^ 1117903259
    var81 = var80 | 1460375894
    result = var74 | (((var77 - (879597402 + (var71 & arg1) ^ var69 + var79 + var78 + var80) | var75) - var70) ^ var79)
    return result
def func3(arg8, arg9):
    var14 = func4(arg9, arg8)
    def func5(arg15, arg16):
        var17 = arg8 & arg16
        var18 = arg8 ^ (1162160567 & var17) ^ arg15
        if arg15 < var14:
            var19 = arg15 + arg16
        else:
            var19 = arg15 + arg8 ^ var14 & arg9
        var20 = (arg9 - 196) - var17 - arg8
        var21 = arg8 & arg15
        var22 = var14 | arg15 + arg15
        var23 = arg16 + var22 | var20 - var22
        var24 = (-42074120 & arg8 - var17) + var23
        var25 = var20 - -160194532 | var18 ^ var17
        var26 = var22 | var20
        var27 = 908 | ((arg8 + -775) ^ var22)
        var28 = arg8 ^ var18 | var17
        var29 = arg9 ^ arg8 | 663
        var30 = (var26 ^ var22 | var24) | var29
        var31 = var24 + var20
        var32 = var23 & var17
        var33 = 315549335 & var17
        if var18 < var33:
            var34 = var22 & -891 | -2063237487 | var20
        else:
            var34 = (var32 ^ var29) & var30
        var35 = arg8 | var24
        var36 = 2033393805 - var24
        var37 = var32 + var30 | var29 - var36
        var38 = var21 - var36
        var39 = var26 - var28 & arg16 + var37
        var40 = var24 & (arg16 | var35) - arg9
        var41 = var18 - var26 & var18
        result = ((var31 | (var17 - var22 - (var35 | var14 - var32 & var21 ^ var37 ^ var40) | var23)) - var37) - var20
        return result
    var42 = func5(arg8, var14)
    var43 = -191353557 | (1470922617 ^ arg9)
    var44 = -246 + arg8 + arg9 & -239
    var45 = (546659885 - var43 ^ arg9) + arg8
    var46 = 710908187 - var42 & (var14 & var44)
    if var44 < var44:
        var47 = (arg8 - arg9) ^ var14
    else:
        var47 = var45 | var46 - var42 | var44
    var48 = var46 | var44 & (var46 ^ arg8)
    var49 = var45 + var45
    var50 = var14 + (var48 ^ var43)
    var51 = var44 - var49
    var52 = var48 ^ (-2114736290 ^ var49 ^ -702)
    var53 = var49 | var49
    var54 = var48 | var53
    var55 = var48 & var51
    if var51 < var46:
        var56 = var52 & (var45 & var54)
    else:
        var56 = var50 - var49 ^ 705152834
    var57 = var50 | ((var44 - arg9) ^ var49)
    var58 = var45 & (var42 - var48 & var50)
    var59 = var48 ^ var45 & (var51 & var42)
    var60 = (var51 & var53) ^ var52 + var44
    var61 = var14 ^ var53 ^ var53
    var62 = var50 ^ var48
    var63 = arg9 | var49
    var64 = 1473945669 + var57
    var65 = ((var57 - var42) + var63) & var43
    var66 = var61 | var55
    var67 = var14 + -835 & var62
    result = (var14 ^ (var49 | var14)) | var14 & -210
    return result
def func4(arg10, arg11):
    var12 = 0
    for var13 in [6 + (i & i) for i in xrange(22)]:
        var12 += (var13 - arg11) ^ arg10
    return var12
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(45):
        var5 += arg4 | var5
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var68 = func3(arg2, var7)
    var69 = 254 & ((arg2 & var68) | var68)
    var70 = 1033406983 | -927763429 | (-160033965 ^ 586)
    var71 = var68 & 312834057
    var72 = var70 - -503
    var73 = ((arg2 - var70) & var72) + var69
    var74 = (-800 & var68) & var7
    var75 = (var72 | var7 - arg2) ^ var73
    var76 = arg2 - (arg2 + arg1) + -1901428603
    var77 = var74 | var68
    var78 = (-1601437787 ^ var74) + var7 ^ var73
    var79 = var77 + var71 + var74 + var73
    var80 = var69 ^ 1117903259
    var81 = var80 | 1460375894
    result = var74 | (((var77 - (879597402 + (var71 & arg1) ^ var69 + var79 + var78 + var80) | var75) - var70) ^ var79)
    return result
def func3(arg8, arg9):
    var14 = func4(arg9, arg8)
    def func5(arg15, arg16):
        var17 = arg8 & arg16
        var18 = arg8 ^ (1162160567 & var17) ^ arg15
        if arg15 < var14:
            var19 = arg15 + arg16
        else:
            var19 = arg15 + arg8 ^ var14 & arg9
        var20 = (arg9 - 196) - var17 - arg8
        var21 = arg8 & arg15
        var22 = var14 | arg15 + arg15
        var23 = arg16 + var22 | var20 - var22
        var24 = (-42074120 & arg8 - var17) + var23
        var25 = var20 - -160194532 | var18 ^ var17
        var26 = var22 | var20
        var27 = 908 | ((arg8 + -775) ^ var22)
        var28 = arg8 ^ var18 | var17
        var29 = arg9 ^ arg8 | 663
        var30 = (var26 ^ var22 | var24) | var29
        var31 = var24 + var20
        var32 = var23 & var17
        var33 = 315549335 & var17
        if var18 < var33:
            var34 = var22 & -891 | -2063237487 | var20
        else:
            var34 = (var32 ^ var29) & var30
        var35 = arg8 | var24
        var36 = 2033393805 - var24
        var37 = var32 + var30 | var29 - var36
        var38 = var21 - var36
        var39 = var26 - var28 & arg16 + var37
        var40 = var24 & (arg16 | var35) - arg9
        var41 = var18 - var26 & var18
        result = ((var31 | (var17 - var22 - (var35 | var14 - var32 & var21 ^ var37 ^ var40) | var23)) - var37) - var20
        return result
    var42 = func5(arg8, var14)
    var43 = -191353557 | (1470922617 ^ arg9)
    var44 = -246 + arg8 + arg9 & -239
    var45 = (546659885 - var43 ^ arg9) + arg8
    var46 = 710908187 - var42 & (var14 & var44)
    if var44 < var44:
        var47 = (arg8 - arg9) ^ var14
    else:
        var47 = var45 | var46 - var42 | var44
    var48 = var46 | var44 & (var46 ^ arg8)
    var49 = var45 + var45
    var50 = var14 + (var48 ^ var43)
    var51 = var44 - var49
    var52 = var48 ^ (-2114736290 ^ var49 ^ -702)
    var53 = var49 | var49
    var54 = var48 | var53
    var55 = var48 & var51
    if var51 < var46:
        var56 = var52 & (var45 & var54)
    else:
        var56 = var50 - var49 ^ 705152834
    var57 = var50 | ((var44 - arg9) ^ var49)
    var58 = var45 & (var42 - var48 & var50)
    var59 = var48 ^ var45 & (var51 & var42)
    var60 = (var51 & var53) ^ var52 + var44
    var61 = var14 ^ var53 ^ var53
    var62 = var50 ^ var48
    var63 = arg9 | var49
    var64 = 1473945669 + var57
    var65 = ((var57 - var42) + var63) & var43
    var66 = var61 | var55
    var67 = var14 + -835 & var62
    result = (var14 ^ (var49 | var14)) | var14 & -210
    return result
def func4(arg10, arg11):
    var12 = 0
    for var13 in [6 + (i & i) for i in xrange(22)]:
        var12 += (var13 - arg11) ^ arg10
    return var12
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(45):
        var5 += arg4 | var5
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var68 = func3(arg2, var7)
    var69 = 254 & ((arg2 & var68) | var68)
    var70 = 1033406983 | -927763429 | (-160033965 ^ 586)
    var71 = var68 & 312834057
    var72 = var70 - -503
    var73 = ((arg2 - var70) & var72) + var69
    var74 = (-800 & var68) & var7
    var75 = (var72 | var7 - arg2) ^ var73
    var76 = arg2 - (arg2 + arg1) + -1901428603
    var77 = var74 | var68
    var78 = (-1601437787 ^ var74) + var7 ^ var73
    var79 = var77 + var71 + var74 + var73
    var80 = var69 ^ 1117903259
    var81 = var80 | 1460375894
    result = var74 | (((var77 - (879597402 + (var71 & arg1) ^ var69 + var79 + var78 + var80) | var75) - var70) ^ var79)
    return result
def func3(arg8, arg9):
    var14 = func4(arg9, arg8)
    def func5(arg15, arg16):
        var17 = arg8 & arg16
        var18 = arg8 ^ (1162160567 & var17) ^ arg15
        if arg15 < var14:
            var19 = arg15 + arg16
        else:
            var19 = arg15 + arg8 ^ var14 & arg9
        var20 = (arg9 - 196) - var17 - arg8
        var21 = arg8 & arg15
        var22 = var14 | arg15 + arg15
        var23 = arg16 + var22 | var20 - var22
        var24 = (-42074120 & arg8 - var17) + var23
        var25 = var20 - -160194532 | var18 ^ var17
        var26 = var22 | var20
        var27 = 908 | ((arg8 + -775) ^ var22)
        var28 = arg8 ^ var18 | var17
        var29 = arg9 ^ arg8 | 663
        var30 = (var26 ^ var22 | var24) | var29
        var31 = var24 + var20
        var32 = var23 & var17
        var33 = 315549335 & var17
        if var18 < var33:
            var34 = var22 & -891 | -2063237487 | var20
        else:
            var34 = (var32 ^ var29) & var30
        var35 = arg8 | var24
        var36 = 2033393805 - var24
        var37 = var32 + var30 | var29 - var36
        var38 = var21 - var36
        var39 = var26 - var28 & arg16 + var37
        var40 = var24 & (arg16 | var35) - arg9
        var41 = var18 - var26 & var18
        result = ((var31 | (var17 - var22 - (var35 | var14 - var32 & var21 ^ var37 ^ var40) | var23)) - var37) - var20
        return result
    var42 = func5(arg8, var14)
    var43 = -191353557 | (1470922617 ^ arg9)
    var44 = -246 + arg8 + arg9 & -239
    var45 = (546659885 - var43 ^ arg9) + arg8
    var46 = 710908187 - var42 & (var14 & var44)
    if var44 < var44:
        var47 = (arg8 - arg9) ^ var14
    else:
        var47 = var45 | var46 - var42 | var44
    var48 = var46 | var44 & (var46 ^ arg8)
    var49 = var45 + var45
    var50 = var14 + (var48 ^ var43)
    var51 = var44 - var49
    var52 = var48 ^ (-2114736290 ^ var49 ^ -702)
    var53 = var49 | var49
    var54 = var48 | var53
    var55 = var48 & var51
    if var51 < var46:
        var56 = var52 & (var45 & var54)
    else:
        var56 = var50 - var49 ^ 705152834
    var57 = var50 | ((var44 - arg9) ^ var49)
    var58 = var45 & (var42 - var48 & var50)
    var59 = var48 ^ var45 & (var51 & var42)
    var60 = (var51 & var53) ^ var52 + var44
    var61 = var14 ^ var53 ^ var53
    var62 = var50 ^ var48
    var63 = arg9 | var49
    var64 = 1473945669 + var57
    var65 = ((var57 - var42) + var63) & var43
    var66 = var61 | var55
    var67 = var14 + -835 & var62
    result = (var14 ^ (var49 | var14)) | var14 & -210
    return result
def func4(arg10, arg11):
    var12 = 0
    for var13 in [6 + (i & i) for i in xrange(22)]:
        var12 += (var13 - arg11) ^ arg10
    return var12
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(45):
        var5 += arg4 | var5
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var68 = func3(arg2, var7)
    var69 = 254 & ((arg2 & var68) | var68)
    var70 = 1033406983 | -927763429 | (-160033965 ^ 586)
    var71 = var68 & 312834057
    var72 = var70 - -503
    var73 = ((arg2 - var70) & var72) + var69
    var74 = (-800 & var68) & var7
    var75 = (var72 | var7 - arg2) ^ var73
    var76 = arg2 - (arg2 + arg1) + -1901428603
    var77 = var74 | var68
    var78 = (-1601437787 ^ var74) + var7 ^ var73
    var79 = var77 + var71 + var74 + var73
    var80 = var69 ^ 1117903259
    var81 = var80 | 1460375894
    result = var74 | (((var77 - (879597402 + (var71 & arg1) ^ var69 + var79 + var78 + var80) | var75) - var70) ^ var79)
    return result
def func3(arg8, arg9):
    var14 = func4(arg9, arg8)
    def func5(arg15, arg16):
        var17 = arg8 & arg16
        var18 = arg8 ^ (1162160567 & var17) ^ arg15
        if arg15 < var14:
            var19 = arg15 + arg16
        else:
            var19 = arg15 + arg8 ^ var14 & arg9
        var20 = (arg9 - 196) - var17 - arg8
        var21 = arg8 & arg15
        var22 = var14 | arg15 + arg15
        var23 = arg16 + var22 | var20 - var22
        var24 = (-42074120 & arg8 - var17) + var23
        var25 = var20 - -160194532 | var18 ^ var17
        var26 = var22 | var20
        var27 = 908 | ((arg8 + -775) ^ var22)
        var28 = arg8 ^ var18 | var17
        var29 = arg9 ^ arg8 | 663
        var30 = (var26 ^ var22 | var24) | var29
        var31 = var24 + var20
        var32 = var23 & var17
        var33 = 315549335 & var17
        if var18 < var33:
            var34 = var22 & -891 | -2063237487 | var20
        else:
            var34 = (var32 ^ var29) & var30
        var35 = arg8 | var24
        var36 = 2033393805 - var24
        var37 = var32 + var30 | var29 - var36
        var38 = var21 - var36
        var39 = var26 - var28 & arg16 + var37
        var40 = var24 & (arg16 | var35) - arg9
        var41 = var18 - var26 & var18
        result = ((var31 | (var17 - var22 - (var35 | var14 - var32 & var21 ^ var37 ^ var40) | var23)) - var37) - var20
        return result
    var42 = func5(arg8, var14)
    var43 = -191353557 | (1470922617 ^ arg9)
    var44 = -246 + arg8 + arg9 & -239
    var45 = (546659885 - var43 ^ arg9) + arg8
    var46 = 710908187 - var42 & (var14 & var44)
    if var44 < var44:
        var47 = (arg8 - arg9) ^ var14
    else:
        var47 = var45 | var46 - var42 | var44
    var48 = var46 | var44 & (var46 ^ arg8)
    var49 = var45 + var45
    var50 = var14 + (var48 ^ var43)
    var51 = var44 - var49
    var52 = var48 ^ (-2114736290 ^ var49 ^ -702)
    var53 = var49 | var49
    var54 = var48 | var53
    var55 = var48 & var51
    if var51 < var46:
        var56 = var52 & (var45 & var54)
    else:
        var56 = var50 - var49 ^ 705152834
    var57 = var50 | ((var44 - arg9) ^ var49)
    var58 = var45 & (var42 - var48 & var50)
    var59 = var48 ^ var45 & (var51 & var42)
    var60 = (var51 & var53) ^ var52 + var44
    var61 = var14 ^ var53 ^ var53
    var62 = var50 ^ var48
    var63 = arg9 | var49
    var64 = 1473945669 + var57
    var65 = ((var57 - var42) + var63) & var43
    var66 = var61 | var55
    var67 = var14 + -835 & var62
    result = (var14 ^ (var49 | var14)) | var14 & -210
    return result
def func4(arg10, arg11):
    var12 = 0
    for var13 in [6 + (i & i) for i in xrange(22)]:
        var12 += (var13 - arg11) ^ arg10
    return var12
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(45):
        var5 += arg4 | var5
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var68 = func3(arg2, var7)
    var69 = 254 & ((arg2 & var68) | var68)
    var70 = 1033406983 | -927763429 | (-160033965 ^ 586)
    var71 = var68 & 312834057
    var72 = var70 - -503
    var73 = ((arg2 - var70) & var72) + var69
    var74 = (-800 & var68) & var7
    var75 = (var72 | var7 - arg2) ^ var73
    var76 = arg2 - (arg2 + arg1) + -1901428603
    var77 = var74 | var68
    var78 = (-1601437787 ^ var74) + var7 ^ var73
    var79 = var77 + var71 + var74 + var73
    var80 = var69 ^ 1117903259
    var81 = var80 | 1460375894
    result = var74 | (((var77 - (879597402 + (var71 & arg1) ^ var69 + var79 + var78 + var80) | var75) - var70) ^ var79)
    return result
def func3(arg8, arg9):
    var14 = func4(arg9, arg8)
    def func5(arg15, arg16):
        var17 = arg8 & arg16
        var18 = arg8 ^ (1162160567 & var17) ^ arg15
        if arg15 < var14:
            var19 = arg15 + arg16
        else:
            var19 = arg15 + arg8 ^ var14 & arg9
        var20 = (arg9 - 196) - var17 - arg8
        var21 = arg8 & arg15
        var22 = var14 | arg15 + arg15
        var23 = arg16 + var22 | var20 - var22
        var24 = (-42074120 & arg8 - var17) + var23
        var25 = var20 - -160194532 | var18 ^ var17
        var26 = var22 | var20
        var27 = 908 | ((arg8 + -775) ^ var22)
        var28 = arg8 ^ var18 | var17
        var29 = arg9 ^ arg8 | 663
        var30 = (var26 ^ var22 | var24) | var29
        var31 = var24 + var20
        var32 = var23 & var17
        var33 = 315549335 & var17
        if var18 < var33:
            var34 = var22 & -891 | -2063237487 | var20
        else:
            var34 = (var32 ^ var29) & var30
        var35 = arg8 | var24
        var36 = 2033393805 - var24
        var37 = var32 + var30 | var29 - var36
        var38 = var21 - var36
        var39 = var26 - var28 & arg16 + var37
        var40 = var24 & (arg16 | var35) - arg9
        var41 = var18 - var26 & var18
        result = ((var31 | (var17 - var22 - (var35 | var14 - var32 & var21 ^ var37 ^ var40) | var23)) - var37) - var20
        return result
    var42 = func5(arg8, var14)
    var43 = -191353557 | (1470922617 ^ arg9)
    var44 = -246 + arg8 + arg9 & -239
    var45 = (546659885 - var43 ^ arg9) + arg8
    var46 = 710908187 - var42 & (var14 & var44)
    if var44 < var44:
        var47 = (arg8 - arg9) ^ var14
    else:
        var47 = var45 | var46 - var42 | var44
    var48 = var46 | var44 & (var46 ^ arg8)
    var49 = var45 + var45
    var50 = var14 + (var48 ^ var43)
    var51 = var44 - var49
    var52 = var48 ^ (-2114736290 ^ var49 ^ -702)
    var53 = var49 | var49
    var54 = var48 | var53
    var55 = var48 & var51
    if var51 < var46:
        var56 = var52 & (var45 & var54)
    else:
        var56 = var50 - var49 ^ 705152834
    var57 = var50 | ((var44 - arg9) ^ var49)
    var58 = var45 & (var42 - var48 & var50)
    var59 = var48 ^ var45 & (var51 & var42)
    var60 = (var51 & var53) ^ var52 + var44
    var61 = var14 ^ var53 ^ var53
    var62 = var50 ^ var48
    var63 = arg9 | var49
    var64 = 1473945669 + var57
    var65 = ((var57 - var42) + var63) & var43
    var66 = var61 | var55
    var67 = var14 + -835 & var62
    result = (var14 ^ (var49 | var14)) | var14 & -210
    return result
def func4(arg10, arg11):
    var12 = 0
    for var13 in [6 + (i & i) for i in xrange(22)]:
        var12 += (var13 - arg11) ^ arg10
    return var12
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(45):
        var5 += arg4 | var5
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var68 = func3(arg2, var7)
    var69 = 254 & ((arg2 & var68) | var68)
    var70 = 1033406983 | -927763429 | (-160033965 ^ 586)
    var71 = var68 & 312834057
    var72 = var70 - -503
    var73 = ((arg2 - var70) & var72) + var69
    var74 = (-800 & var68) & var7
    var75 = (var72 | var7 - arg2) ^ var73
    var76 = arg2 - (arg2 + arg1) + -1901428603
    var77 = var74 | var68
    var78 = (-1601437787 ^ var74) + var7 ^ var73
    var79 = var77 + var71 + var74 + var73
    var80 = var69 ^ 1117903259
    var81 = var80 | 1460375894
    result = var74 | (((var77 - (879597402 + (var71 & arg1) ^ var69 + var79 + var78 + var80) | var75) - var70) ^ var79)
    return result
def func3(arg8, arg9):
    var14 = func4(arg9, arg8)
    def func5(arg15, arg16):
        var17 = arg8 & arg16
        var18 = arg8 ^ (1162160567 & var17) ^ arg15
        if arg15 < var14:
            var19 = arg15 + arg16
        else:
            var19 = arg15 + arg8 ^ var14 & arg9
        var20 = (arg9 - 196) - var17 - arg8
        var21 = arg8 & arg15
        var22 = var14 | arg15 + arg15
        var23 = arg16 + var22 | var20 - var22
        var24 = (-42074120 & arg8 - var17) + var23
        var25 = var20 - -160194532 | var18 ^ var17
        var26 = var22 | var20
        var27 = 908 | ((arg8 + -775) ^ var22)
        var28 = arg8 ^ var18 | var17
        var29 = arg9 ^ arg8 | 663
        var30 = (var26 ^ var22 | var24) | var29
        var31 = var24 + var20
        var32 = var23 & var17
        var33 = 315549335 & var17
        if var18 < var33:
            var34 = var22 & -891 | -2063237487 | var20
        else:
            var34 = (var32 ^ var29) & var30
        var35 = arg8 | var24
        var36 = 2033393805 - var24
        var37 = var32 + var30 | var29 - var36
        var38 = var21 - var36
        var39 = var26 - var28 & arg16 + var37
        var40 = var24 & (arg16 | var35) - arg9
        var41 = var18 - var26 & var18
        result = ((var31 | (var17 - var22 - (var35 | var14 - var32 & var21 ^ var37 ^ var40) | var23)) - var37) - var20
        return result
    var42 = func5(arg8, var14)
    var43 = -191353557 | (1470922617 ^ arg9)
    var44 = -246 + arg8 + arg9 & -239
    var45 = (546659885 - var43 ^ arg9) + arg8
    var46 = 710908187 - var42 & (var14 & var44)
    if var44 < var44:
        var47 = (arg8 - arg9) ^ var14
    else:
        var47 = var45 | var46 - var42 | var44
    var48 = var46 | var44 & (var46 ^ arg8)
    var49 = var45 + var45
    var50 = var14 + (var48 ^ var43)
    var51 = var44 - var49
    var52 = var48 ^ (-2114736290 ^ var49 ^ -702)
    var53 = var49 | var49
    var54 = var48 | var53
    var55 = var48 & var51
    if var51 < var46:
        var56 = var52 & (var45 & var54)
    else:
        var56 = var50 - var49 ^ 705152834
    var57 = var50 | ((var44 - arg9) ^ var49)
    var58 = var45 & (var42 - var48 & var50)
    var59 = var48 ^ var45 & (var51 & var42)
    var60 = (var51 & var53) ^ var52 + var44
    var61 = var14 ^ var53 ^ var53
    var62 = var50 ^ var48
    var63 = arg9 | var49
    var64 = 1473945669 + var57
    var65 = ((var57 - var42) + var63) & var43
    var66 = var61 | var55
    var67 = var14 + -835 & var62
    result = (var14 ^ (var49 | var14)) | var14 & -210
    return result
def func4(arg10, arg11):
    var12 = 0
    for var13 in [6 + (i & i) for i in xrange(22)]:
        var12 += (var13 - arg11) ^ arg10
    return var12
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(45):
        var5 += arg4 | var5
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var68 = func3(arg2, var7)
    var69 = 254 & ((arg2 & var68) | var68)
    var70 = 1033406983 | -927763429 | (-160033965 ^ 586)
    var71 = var68 & 312834057
    var72 = var70 - -503
    var73 = ((arg2 - var70) & var72) + var69
    var74 = (-800 & var68) & var7
    var75 = (var72 | var7 - arg2) ^ var73
    var76 = arg2 - (arg2 + arg1) + -1901428603
    var77 = var74 | var68
    var78 = (-1601437787 ^ var74) + var7 ^ var73
    var79 = var77 + var71 + var74 + var73
    var80 = var69 ^ 1117903259
    var81 = var80 | 1460375894
    result = var74 | (((var77 - (879597402 + (var71 & arg1) ^ var69 + var79 + var78 + var80) | var75) - var70) ^ var79)
    return result
def func3(arg8, arg9):
    var14 = func4(arg9, arg8)
    def func5(arg15, arg16):
        var17 = arg8 & arg16
        var18 = arg8 ^ (1162160567 & var17) ^ arg15
        if arg15 < var14:
            var19 = arg15 + arg16
        else:
            var19 = arg15 + arg8 ^ var14 & arg9
        var20 = (arg9 - 196) - var17 - arg8
        var21 = arg8 & arg15
        var22 = var14 | arg15 + arg15
        var23 = arg16 + var22 | var20 - var22
        var24 = (-42074120 & arg8 - var17) + var23
        var25 = var20 - -160194532 | var18 ^ var17
        var26 = var22 | var20
        var27 = 908 | ((arg8 + -775) ^ var22)
        var28 = arg8 ^ var18 | var17
        var29 = arg9 ^ arg8 | 663
        var30 = (var26 ^ var22 | var24) | var29
        var31 = var24 + var20
        var32 = var23 & var17
        var33 = 315549335 & var17
        if var18 < var33:
            var34 = var22 & -891 | -2063237487 | var20
        else:
            var34 = (var32 ^ var29) & var30
        var35 = arg8 | var24
        var36 = 2033393805 - var24
        var37 = var32 + var30 | var29 - var36
        var38 = var21 - var36
        var39 = var26 - var28 & arg16 + var37
        var40 = var24 & (arg16 | var35) - arg9
        var41 = var18 - var26 & var18
        result = ((var31 | (var17 - var22 - (var35 | var14 - var32 & var21 ^ var37 ^ var40) | var23)) - var37) - var20
        return result
    var42 = func5(arg8, var14)
    var43 = -191353557 | (1470922617 ^ arg9)
    var44 = -246 + arg8 + arg9 & -239
    var45 = (546659885 - var43 ^ arg9) + arg8
    var46 = 710908187 - var42 & (var14 & var44)
    if var44 < var44:
        var47 = (arg8 - arg9) ^ var14
    else:
        var47 = var45 | var46 - var42 | var44
    var48 = var46 | var44 & (var46 ^ arg8)
    var49 = var45 + var45
    var50 = var14 + (var48 ^ var43)
    var51 = var44 - var49
    var52 = var48 ^ (-2114736290 ^ var49 ^ -702)
    var53 = var49 | var49
    var54 = var48 | var53
    var55 = var48 & var51
    if var51 < var46:
        var56 = var52 & (var45 & var54)
    else:
        var56 = var50 - var49 ^ 705152834
    var57 = var50 | ((var44 - arg9) ^ var49)
    var58 = var45 & (var42 - var48 & var50)
    var59 = var48 ^ var45 & (var51 & var42)
    var60 = (var51 & var53) ^ var52 + var44
    var61 = var14 ^ var53 ^ var53
    var62 = var50 ^ var48
    var63 = arg9 | var49
    var64 = 1473945669 + var57
    var65 = ((var57 - var42) + var63) & var43
    var66 = var61 | var55
    var67 = var14 + -835 & var62
    result = (var14 ^ (var49 | var14)) | var14 & -210
    return result
def func4(arg10, arg11):
    var12 = 0
    for var13 in [6 + (i & i) for i in xrange(22)]:
        var12 += (var13 - arg11) ^ arg10
    return var12
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(45):
        var5 += arg4 | var5
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var68 = func3(arg2, var7)
    var69 = 254 & ((arg2 & var68) | var68)
    var70 = 1033406983 | -927763429 | (-160033965 ^ 586)
    var71 = var68 & 312834057
    var72 = var70 - -503
    var73 = ((arg2 - var70) & var72) + var69
    var74 = (-800 & var68) & var7
    var75 = (var72 | var7 - arg2) ^ var73
    var76 = arg2 - (arg2 + arg1) + -1901428603
    var77 = var74 | var68
    var78 = (-1601437787 ^ var74) + var7 ^ var73
    var79 = var77 + var71 + var74 + var73
    var80 = var69 ^ 1117903259
    var81 = var80 | 1460375894
    result = var74 | (((var77 - (879597402 + (var71 & arg1) ^ var69 + var79 + var78 + var80) | var75) - var70) ^ var79)
    return result
def func3(arg8, arg9):
    var14 = func4(arg9, arg8)
    def func5(arg15, arg16):
        var17 = arg8 & arg16
        var18 = arg8 ^ (1162160567 & var17) ^ arg15
        if arg15 < var14:
            var19 = arg15 + arg16
        else:
            var19 = arg15 + arg8 ^ var14 & arg9
        var20 = (arg9 - 196) - var17 - arg8
        var21 = arg8 & arg15
        var22 = var14 | arg15 + arg15
        var23 = arg16 + var22 | var20 - var22
        var24 = (-42074120 & arg8 - var17) + var23
        var25 = var20 - -160194532 | var18 ^ var17
        var26 = var22 | var20
        var27 = 908 | ((arg8 + -775) ^ var22)
        var28 = arg8 ^ var18 | var17
        var29 = arg9 ^ arg8 | 663
        var30 = (var26 ^ var22 | var24) | var29
        var31 = var24 + var20
        var32 = var23 & var17
        var33 = 315549335 & var17
        if var18 < var33:
            var34 = var22 & -891 | -2063237487 | var20
        else:
            var34 = (var32 ^ var29) & var30
        var35 = arg8 | var24
        var36 = 2033393805 - var24
        var37 = var32 + var30 | var29 - var36
        var38 = var21 - var36
        var39 = var26 - var28 & arg16 + var37
        var40 = var24 & (arg16 | var35) - arg9
        var41 = var18 - var26 & var18
        result = ((var31 | (var17 - var22 - (var35 | var14 - var32 & var21 ^ var37 ^ var40) | var23)) - var37) - var20
        return result
    var42 = func5(arg8, var14)
    var43 = -191353557 | (1470922617 ^ arg9)
    var44 = -246 + arg8 + arg9 & -239
    var45 = (546659885 - var43 ^ arg9) + arg8
    var46 = 710908187 - var42 & (var14 & var44)
    if var44 < var44:
        var47 = (arg8 - arg9) ^ var14
    else:
        var47 = var45 | var46 - var42 | var44
    var48 = var46 | var44 & (var46 ^ arg8)
    var49 = var45 + var45
    var50 = var14 + (var48 ^ var43)
    var51 = var44 - var49
    var52 = var48 ^ (-2114736290 ^ var49 ^ -702)
    var53 = var49 | var49
    var54 = var48 | var53
    var55 = var48 & var51
    if var51 < var46:
        var56 = var52 & (var45 & var54)
    else:
        var56 = var50 - var49 ^ 705152834
    var57 = var50 | ((var44 - arg9) ^ var49)
    var58 = var45 & (var42 - var48 & var50)
    var59 = var48 ^ var45 & (var51 & var42)
    var60 = (var51 & var53) ^ var52 + var44
    var61 = var14 ^ var53 ^ var53
    var62 = var50 ^ var48
    var63 = arg9 | var49
    var64 = 1473945669 + var57
    var65 = ((var57 - var42) + var63) & var43
    var66 = var61 | var55
    var67 = var14 + -835 & var62
    result = (var14 ^ (var49 | var14)) | var14 & -210
    return result
def func4(arg10, arg11):
    var12 = 0
    for var13 in [6 + (i & i) for i in xrange(22)]:
        var12 += (var13 - arg11) ^ arg10
    return var12
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(45):
        var5 += arg4 | var5
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var68 = func3(arg2, var7)
    var69 = 254 & ((arg2 & var68) | var68)
    var70 = 1033406983 | -927763429 | (-160033965 ^ 586)
    var71 = var68 & 312834057
    var72 = var70 - -503
    var73 = ((arg2 - var70) & var72) + var69
    var74 = (-800 & var68) & var7
    var75 = (var72 | var7 - arg2) ^ var73
    var76 = arg2 - (arg2 + arg1) + -1901428603
    var77 = var74 | var68
    var78 = (-1601437787 ^ var74) + var7 ^ var73
    var79 = var77 + var71 + var74 + var73
    var80 = var69 ^ 1117903259
    var81 = var80 | 1460375894
    result = var74 | (((var77 - (879597402 + (var71 & arg1) ^ var69 + var79 + var78 + var80) | var75) - var70) ^ var79)
    return result
def func3(arg8, arg9):
    var14 = func4(arg9, arg8)
    def func5(arg15, arg16):
        var17 = arg8 & arg16
        var18 = arg8 ^ (1162160567 & var17) ^ arg15
        if arg15 < var14:
            var19 = arg15 + arg16
        else:
            var19 = arg15 + arg8 ^ var14 & arg9
        var20 = (arg9 - 196) - var17 - arg8
        var21 = arg8 & arg15
        var22 = var14 | arg15 + arg15
        var23 = arg16 + var22 | var20 - var22
        var24 = (-42074120 & arg8 - var17) + var23
        var25 = var20 - -160194532 | var18 ^ var17
        var26 = var22 | var20
        var27 = 908 | ((arg8 + -775) ^ var22)
        var28 = arg8 ^ var18 | var17
        var29 = arg9 ^ arg8 | 663
        var30 = (var26 ^ var22 | var24) | var29
        var31 = var24 + var20
        var32 = var23 & var17
        var33 = 315549335 & var17
        if var18 < var33:
            var34 = var22 & -891 | -2063237487 | var20
        else:
            var34 = (var32 ^ var29) & var30
        var35 = arg8 | var24
        var36 = 2033393805 - var24
        var37 = var32 + var30 | var29 - var36
        var38 = var21 - var36
        var39 = var26 - var28 & arg16 + var37
        var40 = var24 & (arg16 | var35) - arg9
        var41 = var18 - var26 & var18
        result = ((var31 | (var17 - var22 - (var35 | var14 - var32 & var21 ^ var37 ^ var40) | var23)) - var37) - var20
        return result
    var42 = func5(arg8, var14)
    var43 = -191353557 | (1470922617 ^ arg9)
    var44 = -246 + arg8 + arg9 & -239
    var45 = (546659885 - var43 ^ arg9) + arg8
    var46 = 710908187 - var42 & (var14 & var44)
    if var44 < var44:
        var47 = (arg8 - arg9) ^ var14
    else:
        var47 = var45 | var46 - var42 | var44
    var48 = var46 | var44 & (var46 ^ arg8)
    var49 = var45 + var45
    var50 = var14 + (var48 ^ var43)
    var51 = var44 - var49
    var52 = var48 ^ (-2114736290 ^ var49 ^ -702)
    var53 = var49 | var49
    var54 = var48 | var53
    var55 = var48 & var51
    if var51 < var46:
        var56 = var52 & (var45 & var54)
    else:
        var56 = var50 - var49 ^ 705152834
    var57 = var50 | ((var44 - arg9) ^ var49)
    var58 = var45 & (var42 - var48 & var50)
    var59 = var48 ^ var45 & (var51 & var42)
    var60 = (var51 & var53) ^ var52 + var44
    var61 = var14 ^ var53 ^ var53
    var62 = var50 ^ var48
    var63 = arg9 | var49
    var64 = 1473945669 + var57
    var65 = ((var57 - var42) + var63) & var43
    var66 = var61 | var55
    var67 = var14 + -835 & var62
    result = (var14 ^ (var49 | var14)) | var14 & -210
    return result
def func4(arg10, arg11):
    var12 = 0
    for var13 in [6 + (i & i) for i in xrange(22)]:
        var12 += (var13 - arg11) ^ arg10
    return var12
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(45):
        var5 += arg4 | var5
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var68 = func3(arg2, var7)
    var69 = 254 & ((arg2 & var68) | var68)
    var70 = 1033406983 | -927763429 | (-160033965 ^ 586)
    var71 = var68 & 312834057
    var72 = var70 - -503
    var73 = ((arg2 - var70) & var72) + var69
    var74 = (-800 & var68) & var7
    var75 = (var72 | var7 - arg2) ^ var73
    var76 = arg2 - (arg2 + arg1) + -1901428603
    var77 = var74 | var68
    var78 = (-1601437787 ^ var74) + var7 ^ var73
    var79 = var77 + var71 + var74 + var73
    var80 = var69 ^ 1117903259
    var81 = var80 | 1460375894
    result = var74 | (((var77 - (879597402 + (var71 & arg1) ^ var69 + var79 + var78 + var80) | var75) - var70) ^ var79)
    return result
def func3(arg8, arg9):
    var14 = func4(arg9, arg8)
    def func5(arg15, arg16):
        var17 = arg8 & arg16
        var18 = arg8 ^ (1162160567 & var17) ^ arg15
        if arg15 < var14:
            var19 = arg15 + arg16
        else:
            var19 = arg15 + arg8 ^ var14 & arg9
        var20 = (arg9 - 196) - var17 - arg8
        var21 = arg8 & arg15
        var22 = var14 | arg15 + arg15
        var23 = arg16 + var22 | var20 - var22
        var24 = (-42074120 & arg8 - var17) + var23
        var25 = var20 - -160194532 | var18 ^ var17
        var26 = var22 | var20
        var27 = 908 | ((arg8 + -775) ^ var22)
        var28 = arg8 ^ var18 | var17
        var29 = arg9 ^ arg8 | 663
        var30 = (var26 ^ var22 | var24) | var29
        var31 = var24 + var20
        var32 = var23 & var17
        var33 = 315549335 & var17
        if var18 < var33:
            var34 = var22 & -891 | -2063237487 | var20
        else:
            var34 = (var32 ^ var29) & var30
        var35 = arg8 | var24
        var36 = 2033393805 - var24
        var37 = var32 + var30 | var29 - var36
        var38 = var21 - var36
        var39 = var26 - var28 & arg16 + var37
        var40 = var24 & (arg16 | var35) - arg9
        var41 = var18 - var26 & var18
        result = ((var31 | (var17 - var22 - (var35 | var14 - var32 & var21 ^ var37 ^ var40) | var23)) - var37) - var20
        return result
    var42 = func5(arg8, var14)
    var43 = -191353557 | (1470922617 ^ arg9)
    var44 = -246 + arg8 + arg9 & -239
    var45 = (546659885 - var43 ^ arg9) + arg8
    var46 = 710908187 - var42 & (var14 & var44)
    if var44 < var44:
        var47 = (arg8 - arg9) ^ var14
    else:
        var47 = var45 | var46 - var42 | var44
    var48 = var46 | var44 & (var46 ^ arg8)
    var49 = var45 + var45
    var50 = var14 + (var48 ^ var43)
    var51 = var44 - var49
    var52 = var48 ^ (-2114736290 ^ var49 ^ -702)
    var53 = var49 | var49
    var54 = var48 | var53
    var55 = var48 & var51
    if var51 < var46:
        var56 = var52 & (var45 & var54)
    else:
        var56 = var50 - var49 ^ 705152834
    var57 = var50 | ((var44 - arg9) ^ var49)
    var58 = var45 & (var42 - var48 & var50)
    var59 = var48 ^ var45 & (var51 & var42)
    var60 = (var51 & var53) ^ var52 + var44
    var61 = var14 ^ var53 ^ var53
    var62 = var50 ^ var48
    var63 = arg9 | var49
    var64 = 1473945669 + var57
    var65 = ((var57 - var42) + var63) & var43
    var66 = var61 | var55
    var67 = var14 + -835 & var62
    result = (var14 ^ (var49 | var14)) | var14 & -210
    return result
def func4(arg10, arg11):
    var12 = 0
    for var13 in [6 + (i & i) for i in xrange(22)]:
        var12 += (var13 - arg11) ^ arg10
    return var12
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(45):
        var5 += arg4 | var5
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var68 = func3(arg2, var7)
    var69 = 254 & ((arg2 & var68) | var68)
    var70 = 1033406983 | -927763429 | (-160033965 ^ 586)
    var71 = var68 & 312834057
    var72 = var70 - -503
    var73 = ((arg2 - var70) & var72) + var69
    var74 = (-800 & var68) & var7
    var75 = (var72 | var7 - arg2) ^ var73
    var76 = arg2 - (arg2 + arg1) + -1901428603
    var77 = var74 | var68
    var78 = (-1601437787 ^ var74) + var7 ^ var73
    var79 = var77 + var71 + var74 + var73
    var80 = var69 ^ 1117903259
    var81 = var80 | 1460375894
    result = var74 | (((var77 - (879597402 + (var71 & arg1) ^ var69 + var79 + var78 + var80) | var75) - var70) ^ var79)
    return result
def func3(arg8, arg9):
    var14 = func4(arg9, arg8)
    def func5(arg15, arg16):
        var17 = arg8 & arg16
        var18 = arg8 ^ (1162160567 & var17) ^ arg15
        if arg15 < var14:
            var19 = arg15 + arg16
        else:
            var19 = arg15 + arg8 ^ var14 & arg9
        var20 = (arg9 - 196) - var17 - arg8
        var21 = arg8 & arg15
        var22 = var14 | arg15 + arg15
        var23 = arg16 + var22 | var20 - var22
        var24 = (-42074120 & arg8 - var17) + var23
        var25 = var20 - -160194532 | var18 ^ var17
        var26 = var22 | var20
        var27 = 908 | ((arg8 + -775) ^ var22)
        var28 = arg8 ^ var18 | var17
        var29 = arg9 ^ arg8 | 663
        var30 = (var26 ^ var22 | var24) | var29
        var31 = var24 + var20
        var32 = var23 & var17
        var33 = 315549335 & var17
        if var18 < var33:
            var34 = var22 & -891 | -2063237487 | var20
        else:
            var34 = (var32 ^ var29) & var30
        var35 = arg8 | var24
        var36 = 2033393805 - var24
        var37 = var32 + var30 | var29 - var36
        var38 = var21 - var36
        var39 = var26 - var28 & arg16 + var37
        var40 = var24 & (arg16 | var35) - arg9
        var41 = var18 - var26 & var18
        result = ((var31 | (var17 - var22 - (var35 | var14 - var32 & var21 ^ var37 ^ var40) | var23)) - var37) - var20
        return result
    var42 = func5(arg8, var14)
    var43 = -191353557 | (1470922617 ^ arg9)
    var44 = -246 + arg8 + arg9 & -239
    var45 = (546659885 - var43 ^ arg9) + arg8
    var46 = 710908187 - var42 & (var14 & var44)
    if var44 < var44:
        var47 = (arg8 - arg9) ^ var14
    else:
        var47 = var45 | var46 - var42 | var44
    var48 = var46 | var44 & (var46 ^ arg8)
    var49 = var45 + var45
    var50 = var14 + (var48 ^ var43)
    var51 = var44 - var49
    var52 = var48 ^ (-2114736290 ^ var49 ^ -702)
    var53 = var49 | var49
    var54 = var48 | var53
    var55 = var48 & var51
    if var51 < var46:
        var56 = var52 & (var45 & var54)
    else:
        var56 = var50 - var49 ^ 705152834
    var57 = var50 | ((var44 - arg9) ^ var49)
    var58 = var45 & (var42 - var48 & var50)
    var59 = var48 ^ var45 & (var51 & var42)
    var60 = (var51 & var53) ^ var52 + var44
    var61 = var14 ^ var53 ^ var53
    var62 = var50 ^ var48
    var63 = arg9 | var49
    var64 = 1473945669 + var57
    var65 = ((var57 - var42) + var63) & var43
    var66 = var61 | var55
    var67 = var14 + -835 & var62
    result = (var14 ^ (var49 | var14)) | var14 & -210
    return result
def func4(arg10, arg11):
    var12 = 0
    for var13 in [6 + (i & i) for i in xrange(22)]:
        var12 += (var13 - arg11) ^ arg10
    return var12
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(45):
        var5 += arg4 | var5
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var68 = func3(arg2, var7)
    var69 = 254 & ((arg2 & var68) | var68)
    var70 = 1033406983 | -927763429 | (-160033965 ^ 586)
    var71 = var68 & 312834057
    var72 = var70 - -503
    var73 = ((arg2 - var70) & var72) + var69
    var74 = (-800 & var68) & var7
    var75 = (var72 | var7 - arg2) ^ var73
    var76 = arg2 - (arg2 + arg1) + -1901428603
    var77 = var74 | var68
    var78 = (-1601437787 ^ var74) + var7 ^ var73
    var79 = var77 + var71 + var74 + var73
    var80 = var69 ^ 1117903259
    var81 = var80 | 1460375894
    result = var74 | (((var77 - (879597402 + (var71 & arg1) ^ var69 + var79 + var78 + var80) | var75) - var70) ^ var79)
    return result
def func3(arg8, arg9):
    var14 = func4(arg9, arg8)
    def func5(arg15, arg16):
        var17 = arg8 & arg16
        var18 = arg8 ^ (1162160567 & var17) ^ arg15
        if arg15 < var14:
            var19 = arg15 + arg16
        else:
            var19 = arg15 + arg8 ^ var14 & arg9
        var20 = (arg9 - 196) - var17 - arg8
        var21 = arg8 & arg15
        var22 = var14 | arg15 + arg15
        var23 = arg16 + var22 | var20 - var22
        var24 = (-42074120 & arg8 - var17) + var23
        var25 = var20 - -160194532 | var18 ^ var17
        var26 = var22 | var20
        var27 = 908 | ((arg8 + -775) ^ var22)
        var28 = arg8 ^ var18 | var17
        var29 = arg9 ^ arg8 | 663
        var30 = (var26 ^ var22 | var24) | var29
        var31 = var24 + var20
        var32 = var23 & var17
        var33 = 315549335 & var17
        if var18 < var33:
            var34 = var22 & -891 | -2063237487 | var20
        else:
            var34 = (var32 ^ var29) & var30
        var35 = arg8 | var24
        var36 = 2033393805 - var24
        var37 = var32 + var30 | var29 - var36
        var38 = var21 - var36
        var39 = var26 - var28 & arg16 + var37
        var40 = var24 & (arg16 | var35) - arg9
        var41 = var18 - var26 & var18
        result = ((var31 | (var17 - var22 - (var35 | var14 - var32 & var21 ^ var37 ^ var40) | var23)) - var37) - var20
        return result
    var42 = func5(arg8, var14)
    var43 = -191353557 | (1470922617 ^ arg9)
    var44 = -246 + arg8 + arg9 & -239
    var45 = (546659885 - var43 ^ arg9) + arg8
    var46 = 710908187 - var42 & (var14 & var44)
    if var44 < var44:
        var47 = (arg8 - arg9) ^ var14
    else:
        var47 = var45 | var46 - var42 | var44
    var48 = var46 | var44 & (var46 ^ arg8)
    var49 = var45 + var45
    var50 = var14 + (var48 ^ var43)
    var51 = var44 - var49
    var52 = var48 ^ (-2114736290 ^ var49 ^ -702)
    var53 = var49 | var49
    var54 = var48 | var53
    var55 = var48 & var51
    if var51 < var46:
        var56 = var52 & (var45 & var54)
    else:
        var56 = var50 - var49 ^ 705152834
    var57 = var50 | ((var44 - arg9) ^ var49)
    var58 = var45 & (var42 - var48 & var50)
    var59 = var48 ^ var45 & (var51 & var42)
    var60 = (var51 & var53) ^ var52 + var44
    var61 = var14 ^ var53 ^ var53
    var62 = var50 ^ var48
    var63 = arg9 | var49
    var64 = 1473945669 + var57
    var65 = ((var57 - var42) + var63) & var43
    var66 = var61 | var55
    var67 = var14 + -835 & var62
    result = (var14 ^ (var49 | var14)) | var14 & -210
    return result
def func4(arg10, arg11):
    var12 = 0
    for var13 in [6 + (i & i) for i in xrange(22)]:
        var12 += (var13 - arg11) ^ arg10
    return var12
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(45):
        var5 += arg4 | var5
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var68 = func3(arg2, var7)
    var69 = 254 & ((arg2 & var68) | var68)
    var70 = 1033406983 | -927763429 | (-160033965 ^ 586)
    var71 = var68 & 312834057
    var72 = var70 - -503
    var73 = ((arg2 - var70) & var72) + var69
    var74 = (-800 & var68) & var7
    var75 = (var72 | var7 - arg2) ^ var73
    var76 = arg2 - (arg2 + arg1) + -1901428603
    var77 = var74 | var68
    var78 = (-1601437787 ^ var74) + var7 ^ var73
    var79 = var77 + var71 + var74 + var73
    var80 = var69 ^ 1117903259
    var81 = var80 | 1460375894
    result = var74 | (((var77 - (879597402 + (var71 & arg1) ^ var69 + var79 + var78 + var80) | var75) - var70) ^ var79)
    return result
def func3(arg8, arg9):
    var14 = func4(arg9, arg8)
    def func5(arg15, arg16):
        var17 = arg8 & arg16
        var18 = arg8 ^ (1162160567 & var17) ^ arg15
        if arg15 < var14:
            var19 = arg15 + arg16
        else:
            var19 = arg15 + arg8 ^ var14 & arg9
        var20 = (arg9 - 196) - var17 - arg8
        var21 = arg8 & arg15
        var22 = var14 | arg15 + arg15
        var23 = arg16 + var22 | var20 - var22
        var24 = (-42074120 & arg8 - var17) + var23
        var25 = var20 - -160194532 | var18 ^ var17
        var26 = var22 | var20
        var27 = 908 | ((arg8 + -775) ^ var22)
        var28 = arg8 ^ var18 | var17
        var29 = arg9 ^ arg8 | 663
        var30 = (var26 ^ var22 | var24) | var29
        var31 = var24 + var20
        var32 = var23 & var17
        var33 = 315549335 & var17
        if var18 < var33:
            var34 = var22 & -891 | -2063237487 | var20
        else:
            var34 = (var32 ^ var29) & var30
        var35 = arg8 | var24
        var36 = 2033393805 - var24
        var37 = var32 + var30 | var29 - var36
        var38 = var21 - var36
        var39 = var26 - var28 & arg16 + var37
        var40 = var24 & (arg16 | var35) - arg9
        var41 = var18 - var26 & var18
        result = ((var31 | (var17 - var22 - (var35 | var14 - var32 & var21 ^ var37 ^ var40) | var23)) - var37) - var20
        return result
    var42 = func5(arg8, var14)
    var43 = -191353557 | (1470922617 ^ arg9)
    var44 = -246 + arg8 + arg9 & -239
    var45 = (546659885 - var43 ^ arg9) + arg8
    var46 = 710908187 - var42 & (var14 & var44)
    if var44 < var44:
        var47 = (arg8 - arg9) ^ var14
    else:
        var47 = var45 | var46 - var42 | var44
    var48 = var46 | var44 & (var46 ^ arg8)
    var49 = var45 + var45
    var50 = var14 + (var48 ^ var43)
    var51 = var44 - var49
    var52 = var48 ^ (-2114736290 ^ var49 ^ -702)
    var53 = var49 | var49
    var54 = var48 | var53
    var55 = var48 & var51
    if var51 < var46:
        var56 = var52 & (var45 & var54)
    else:
        var56 = var50 - var49 ^ 705152834
    var57 = var50 | ((var44 - arg9) ^ var49)
    var58 = var45 & (var42 - var48 & var50)
    var59 = var48 ^ var45 & (var51 & var42)
    var60 = (var51 & var53) ^ var52 + var44
    var61 = var14 ^ var53 ^ var53
    var62 = var50 ^ var48
    var63 = arg9 | var49
    var64 = 1473945669 + var57
    var65 = ((var57 - var42) + var63) & var43
    var66 = var61 | var55
    var67 = var14 + -835 & var62
    result = (var14 ^ (var49 | var14)) | var14 & -210
    return result
def func4(arg10, arg11):
    var12 = 0
    for var13 in [6 + (i & i) for i in xrange(22)]:
        var12 += (var13 - arg11) ^ arg10
    return var12
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(45):
        var5 += arg4 | var5
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var68 = func3(arg2, var7)
    var69 = 254 & ((arg2 & var68) | var68)
    var70 = 1033406983 | -927763429 | (-160033965 ^ 586)
    var71 = var68 & 312834057
    var72 = var70 - -503
    var73 = ((arg2 - var70) & var72) + var69
    var74 = (-800 & var68) & var7
    var75 = (var72 | var7 - arg2) ^ var73
    var76 = arg2 - (arg2 + arg1) + -1901428603
    var77 = var74 | var68
    var78 = (-1601437787 ^ var74) + var7 ^ var73
    var79 = var77 + var71 + var74 + var73
    var80 = var69 ^ 1117903259
    var81 = var80 | 1460375894
    result = var74 | (((var77 - (879597402 + (var71 & arg1) ^ var69 + var79 + var78 + var80) | var75) - var70) ^ var79)
    return result
def func3(arg8, arg9):
    var14 = func4(arg9, arg8)
    def func5(arg15, arg16):
        var17 = arg8 & arg16
        var18 = arg8 ^ (1162160567 & var17) ^ arg15
        if arg15 < var14:
            var19 = arg15 + arg16
        else:
            var19 = arg15 + arg8 ^ var14 & arg9
        var20 = (arg9 - 196) - var17 - arg8
        var21 = arg8 & arg15
        var22 = var14 | arg15 + arg15
        var23 = arg16 + var22 | var20 - var22
        var24 = (-42074120 & arg8 - var17) + var23
        var25 = var20 - -160194532 | var18 ^ var17
        var26 = var22 | var20
        var27 = 908 | ((arg8 + -775) ^ var22)
        var28 = arg8 ^ var18 | var17
        var29 = arg9 ^ arg8 | 663
        var30 = (var26 ^ var22 | var24) | var29
        var31 = var24 + var20
        var32 = var23 & var17
        var33 = 315549335 & var17
        if var18 < var33:
            var34 = var22 & -891 | -2063237487 | var20
        else:
            var34 = (var32 ^ var29) & var30
        var35 = arg8 | var24
        var36 = 2033393805 - var24
        var37 = var32 + var30 | var29 - var36
        var38 = var21 - var36
        var39 = var26 - var28 & arg16 + var37
        var40 = var24 & (arg16 | var35) - arg9
        var41 = var18 - var26 & var18
        result = ((var31 | (var17 - var22 - (var35 | var14 - var32 & var21 ^ var37 ^ var40) | var23)) - var37) - var20
        return result
    var42 = func5(arg8, var14)
    var43 = -191353557 | (1470922617 ^ arg9)
    var44 = -246 + arg8 + arg9 & -239
    var45 = (546659885 - var43 ^ arg9) + arg8
    var46 = 710908187 - var42 & (var14 & var44)
    if var44 < var44:
        var47 = (arg8 - arg9) ^ var14
    else:
        var47 = var45 | var46 - var42 | var44
    var48 = var46 | var44 & (var46 ^ arg8)
    var49 = var45 + var45
    var50 = var14 + (var48 ^ var43)
    var51 = var44 - var49
    var52 = var48 ^ (-2114736290 ^ var49 ^ -702)
    var53 = var49 | var49
    var54 = var48 | var53
    var55 = var48 & var51
    if var51 < var46:
        var56 = var52 & (var45 & var54)
    else:
        var56 = var50 - var49 ^ 705152834
    var57 = var50 | ((var44 - arg9) ^ var49)
    var58 = var45 & (var42 - var48 & var50)
    var59 = var48 ^ var45 & (var51 & var42)
    var60 = (var51 & var53) ^ var52 + var44
    var61 = var14 ^ var53 ^ var53
    var62 = var50 ^ var48
    var63 = arg9 | var49
    var64 = 1473945669 + var57
    var65 = ((var57 - var42) + var63) & var43
    var66 = var61 | var55
    var67 = var14 + -835 & var62
    result = (var14 ^ (var49 | var14)) | var14 & -210
    return result
def func4(arg10, arg11):
    var12 = 0
    for var13 in [6 + (i & i) for i in xrange(22)]:
        var12 += (var13 - arg11) ^ arg10
    return var12
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(45):
        var5 += arg4 | var5
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var68 = func3(arg2, var7)
    var69 = 254 & ((arg2 & var68) | var68)
    var70 = 1033406983 | -927763429 | (-160033965 ^ 586)
    var71 = var68 & 312834057
    var72 = var70 - -503
    var73 = ((arg2 - var70) & var72) + var69
    var74 = (-800 & var68) & var7
    var75 = (var72 | var7 - arg2) ^ var73
    var76 = arg2 - (arg2 + arg1) + -1901428603
    var77 = var74 | var68
    var78 = (-1601437787 ^ var74) + var7 ^ var73
    var79 = var77 + var71 + var74 + var73
    var80 = var69 ^ 1117903259
    var81 = var80 | 1460375894
    result = var74 | (((var77 - (879597402 + (var71 & arg1) ^ var69 + var79 + var78 + var80) | var75) - var70) ^ var79)
    return result
def func3(arg8, arg9):
    var14 = func4(arg9, arg8)
    def func5(arg15, arg16):
        var17 = arg8 & arg16
        var18 = arg8 ^ (1162160567 & var17) ^ arg15
        if arg15 < var14:
            var19 = arg15 + arg16
        else:
            var19 = arg15 + arg8 ^ var14 & arg9
        var20 = (arg9 - 196) - var17 - arg8
        var21 = arg8 & arg15
        var22 = var14 | arg15 + arg15
        var23 = arg16 + var22 | var20 - var22
        var24 = (-42074120 & arg8 - var17) + var23
        var25 = var20 - -160194532 | var18 ^ var17
        var26 = var22 | var20
        var27 = 908 | ((arg8 + -775) ^ var22)
        var28 = arg8 ^ var18 | var17
        var29 = arg9 ^ arg8 | 663
        var30 = (var26 ^ var22 | var24) | var29
        var31 = var24 + var20
        var32 = var23 & var17
        var33 = 315549335 & var17
        if var18 < var33:
            var34 = var22 & -891 | -2063237487 | var20
        else:
            var34 = (var32 ^ var29) & var30
        var35 = arg8 | var24
        var36 = 2033393805 - var24
        var37 = var32 + var30 | var29 - var36
        var38 = var21 - var36
        var39 = var26 - var28 & arg16 + var37
        var40 = var24 & (arg16 | var35) - arg9
        var41 = var18 - var26 & var18
        result = ((var31 | (var17 - var22 - (var35 | var14 - var32 & var21 ^ var37 ^ var40) | var23)) - var37) - var20
        return result
    var42 = func5(arg8, var14)
    var43 = -191353557 | (1470922617 ^ arg9)
    var44 = -246 + arg8 + arg9 & -239
    var45 = (546659885 - var43 ^ arg9) + arg8
    var46 = 710908187 - var42 & (var14 & var44)
    if var44 < var44:
        var47 = (arg8 - arg9) ^ var14
    else:
        var47 = var45 | var46 - var42 | var44
    var48 = var46 | var44 & (var46 ^ arg8)
    var49 = var45 + var45
    var50 = var14 + (var48 ^ var43)
    var51 = var44 - var49
    var52 = var48 ^ (-2114736290 ^ var49 ^ -702)
    var53 = var49 | var49
    var54 = var48 | var53
    var55 = var48 & var51
    if var51 < var46:
        var56 = var52 & (var45 & var54)
    else:
        var56 = var50 - var49 ^ 705152834
    var57 = var50 | ((var44 - arg9) ^ var49)
    var58 = var45 & (var42 - var48 & var50)
    var59 = var48 ^ var45 & (var51 & var42)
    var60 = (var51 & var53) ^ var52 + var44
    var61 = var14 ^ var53 ^ var53
    var62 = var50 ^ var48
    var63 = arg9 | var49
    var64 = 1473945669 + var57
    var65 = ((var57 - var42) + var63) & var43
    var66 = var61 | var55
    var67 = var14 + -835 & var62
    result = (var14 ^ (var49 | var14)) | var14 & -210
    return result
def func4(arg10, arg11):
    var12 = 0
    for var13 in [6 + (i & i) for i in xrange(22)]:
        var12 += (var13 - arg11) ^ arg10
    return var12
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(45):
        var5 += arg4 | var5
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var68 = func3(arg2, var7)
    var69 = 254 & ((arg2 & var68) | var68)
    var70 = 1033406983 | -927763429 | (-160033965 ^ 586)
    var71 = var68 & 312834057
    var72 = var70 - -503
    var73 = ((arg2 - var70) & var72) + var69
    var74 = (-800 & var68) & var7
    var75 = (var72 | var7 - arg2) ^ var73
    var76 = arg2 - (arg2 + arg1) + -1901428603
    var77 = var74 | var68
    var78 = (-1601437787 ^ var74) + var7 ^ var73
    var79 = var77 + var71 + var74 + var73
    var80 = var69 ^ 1117903259
    var81 = var80 | 1460375894
    result = var74 | (((var77 - (879597402 + (var71 & arg1) ^ var69 + var79 + var78 + var80) | var75) - var70) ^ var79)
    return result
def func3(arg8, arg9):
    var14 = func4(arg9, arg8)
    def func5(arg15, arg16):
        var17 = arg8 & arg16
        var18 = arg8 ^ (1162160567 & var17) ^ arg15
        if arg15 < var14:
            var19 = arg15 + arg16
        else:
            var19 = arg15 + arg8 ^ var14 & arg9
        var20 = (arg9 - 196) - var17 - arg8
        var21 = arg8 & arg15
        var22 = var14 | arg15 + arg15
        var23 = arg16 + var22 | var20 - var22
        var24 = (-42074120 & arg8 - var17) + var23
        var25 = var20 - -160194532 | var18 ^ var17
        var26 = var22 | var20
        var27 = 908 | ((arg8 + -775) ^ var22)
        var28 = arg8 ^ var18 | var17
        var29 = arg9 ^ arg8 | 663
        var30 = (var26 ^ var22 | var24) | var29
        var31 = var24 + var20
        var32 = var23 & var17
        var33 = 315549335 & var17
        if var18 < var33:
            var34 = var22 & -891 | -2063237487 | var20
        else:
            var34 = (var32 ^ var29) & var30
        var35 = arg8 | var24
        var36 = 2033393805 - var24
        var37 = var32 + var30 | var29 - var36
        var38 = var21 - var36
        var39 = var26 - var28 & arg16 + var37
        var40 = var24 & (arg16 | var35) - arg9
        var41 = var18 - var26 & var18
        result = ((var31 | (var17 - var22 - (var35 | var14 - var32 & var21 ^ var37 ^ var40) | var23)) - var37) - var20
        return result
    var42 = func5(arg8, var14)
    var43 = -191353557 | (1470922617 ^ arg9)
    var44 = -246 + arg8 + arg9 & -239
    var45 = (546659885 - var43 ^ arg9) + arg8
    var46 = 710908187 - var42 & (var14 & var44)
    if var44 < var44:
        var47 = (arg8 - arg9) ^ var14
    else:
        var47 = var45 | var46 - var42 | var44
    var48 = var46 | var44 & (var46 ^ arg8)
    var49 = var45 + var45
    var50 = var14 + (var48 ^ var43)
    var51 = var44 - var49
    var52 = var48 ^ (-2114736290 ^ var49 ^ -702)
    var53 = var49 | var49
    var54 = var48 | var53
    var55 = var48 & var51
    if var51 < var46:
        var56 = var52 & (var45 & var54)
    else:
        var56 = var50 - var49 ^ 705152834
    var57 = var50 | ((var44 - arg9) ^ var49)
    var58 = var45 & (var42 - var48 & var50)
    var59 = var48 ^ var45 & (var51 & var42)
    var60 = (var51 & var53) ^ var52 + var44
    var61 = var14 ^ var53 ^ var53
    var62 = var50 ^ var48
    var63 = arg9 | var49
    var64 = 1473945669 + var57
    var65 = ((var57 - var42) + var63) & var43
    var66 = var61 | var55
    var67 = var14 + -835 & var62
    result = (var14 ^ (var49 | var14)) | var14 & -210
    return result
def func4(arg10, arg11):
    var12 = 0
    for var13 in [6 + (i & i) for i in xrange(22)]:
        var12 += (var13 - arg11) ^ arg10
    return var12
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(45):
        var5 += arg4 | var5
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var68 = func3(arg2, var7)
    var69 = 254 & ((arg2 & var68) | var68)
    var70 = 1033406983 | -927763429 | (-160033965 ^ 586)
    var71 = var68 & 312834057
    var72 = var70 - -503
    var73 = ((arg2 - var70) & var72) + var69
    var74 = (-800 & var68) & var7
    var75 = (var72 | var7 - arg2) ^ var73
    var76 = arg2 - (arg2 + arg1) + -1901428603
    var77 = var74 | var68
    var78 = (-1601437787 ^ var74) + var7 ^ var73
    var79 = var77 + var71 + var74 + var73
    var80 = var69 ^ 1117903259
    var81 = var80 | 1460375894
    result = var74 | (((var77 - (879597402 + (var71 & arg1) ^ var69 + var79 + var78 + var80) | var75) - var70) ^ var79)
    return result
def func3(arg8, arg9):
    var14 = func4(arg9, arg8)
    def func5(arg15, arg16):
        var17 = arg8 & arg16
        var18 = arg8 ^ (1162160567 & var17) ^ arg15
        if arg15 < var14:
            var19 = arg15 + arg16
        else:
            var19 = arg15 + arg8 ^ var14 & arg9
        var20 = (arg9 - 196) - var17 - arg8
        var21 = arg8 & arg15
        var22 = var14 | arg15 + arg15
        var23 = arg16 + var22 | var20 - var22
        var24 = (-42074120 & arg8 - var17) + var23
        var25 = var20 - -160194532 | var18 ^ var17
        var26 = var22 | var20
        var27 = 908 | ((arg8 + -775) ^ var22)
        var28 = arg8 ^ var18 | var17
        var29 = arg9 ^ arg8 | 663
        var30 = (var26 ^ var22 | var24) | var29
        var31 = var24 + var20
        var32 = var23 & var17
        var33 = 315549335 & var17
        if var18 < var33:
            var34 = var22 & -891 | -2063237487 | var20
        else:
            var34 = (var32 ^ var29) & var30
        var35 = arg8 | var24
        var36 = 2033393805 - var24
        var37 = var32 + var30 | var29 - var36
        var38 = var21 - var36
        var39 = var26 - var28 & arg16 + var37
        var40 = var24 & (arg16 | var35) - arg9
        var41 = var18 - var26 & var18
        result = ((var31 | (var17 - var22 - (var35 | var14 - var32 & var21 ^ var37 ^ var40) | var23)) - var37) - var20
        return result
    var42 = func5(arg8, var14)
    var43 = -191353557 | (1470922617 ^ arg9)
    var44 = -246 + arg8 + arg9 & -239
    var45 = (546659885 - var43 ^ arg9) + arg8
    var46 = 710908187 - var42 & (var14 & var44)
    if var44 < var44:
        var47 = (arg8 - arg9) ^ var14
    else:
        var47 = var45 | var46 - var42 | var44
    var48 = var46 | var44 & (var46 ^ arg8)
    var49 = var45 + var45
    var50 = var14 + (var48 ^ var43)
    var51 = var44 - var49
    var52 = var48 ^ (-2114736290 ^ var49 ^ -702)
    var53 = var49 | var49
    var54 = var48 | var53
    var55 = var48 & var51
    if var51 < var46:
        var56 = var52 & (var45 & var54)
    else:
        var56 = var50 - var49 ^ 705152834
    var57 = var50 | ((var44 - arg9) ^ var49)
    var58 = var45 & (var42 - var48 & var50)
    var59 = var48 ^ var45 & (var51 & var42)
    var60 = (var51 & var53) ^ var52 + var44
    var61 = var14 ^ var53 ^ var53
    var62 = var50 ^ var48
    var63 = arg9 | var49
    var64 = 1473945669 + var57
    var65 = ((var57 - var42) + var63) & var43
    var66 = var61 | var55
    var67 = var14 + -835 & var62
    result = (var14 ^ (var49 | var14)) | var14 & -210
    return result
def func4(arg10, arg11):
    var12 = 0
    for var13 in [6 + (i & i) for i in xrange(22)]:
        var12 += (var13 - arg11) ^ arg10
    return var12
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(45):
        var5 += arg4 | var5
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var68 = func3(arg2, var7)
    var69 = 254 & ((arg2 & var68) | var68)
    var70 = 1033406983 | -927763429 | (-160033965 ^ 586)
    var71 = var68 & 312834057
    var72 = var70 - -503
    var73 = ((arg2 - var70) & var72) + var69
    var74 = (-800 & var68) & var7
    var75 = (var72 | var7 - arg2) ^ var73
    var76 = arg2 - (arg2 + arg1) + -1901428603
    var77 = var74 | var68
    var78 = (-1601437787 ^ var74) + var7 ^ var73
    var79 = var77 + var71 + var74 + var73
    var80 = var69 ^ 1117903259
    var81 = var80 | 1460375894
    result = var74 | (((var77 - (879597402 + (var71 & arg1) ^ var69 + var79 + var78 + var80) | var75) - var70) ^ var79)
    return result
def func3(arg8, arg9):
    var14 = func4(arg9, arg8)
    def func5(arg15, arg16):
        var17 = arg8 & arg16
        var18 = arg8 ^ (1162160567 & var17) ^ arg15
        if arg15 < var14:
            var19 = arg15 + arg16
        else:
            var19 = arg15 + arg8 ^ var14 & arg9
        var20 = (arg9 - 196) - var17 - arg8
        var21 = arg8 & arg15
        var22 = var14 | arg15 + arg15
        var23 = arg16 + var22 | var20 - var22
        var24 = (-42074120 & arg8 - var17) + var23
        var25 = var20 - -160194532 | var18 ^ var17
        var26 = var22 | var20
        var27 = 908 | ((arg8 + -775) ^ var22)
        var28 = arg8 ^ var18 | var17
        var29 = arg9 ^ arg8 | 663
        var30 = (var26 ^ var22 | var24) | var29
        var31 = var24 + var20
        var32 = var23 & var17
        var33 = 315549335 & var17
        if var18 < var33:
            var34 = var22 & -891 | -2063237487 | var20
        else:
            var34 = (var32 ^ var29) & var30
        var35 = arg8 | var24
        var36 = 2033393805 - var24
        var37 = var32 + var30 | var29 - var36
        var38 = var21 - var36
        var39 = var26 - var28 & arg16 + var37
        var40 = var24 & (arg16 | var35) - arg9
        var41 = var18 - var26 & var18
        result = ((var31 | (var17 - var22 - (var35 | var14 - var32 & var21 ^ var37 ^ var40) | var23)) - var37) - var20
        return result
    var42 = func5(arg8, var14)
    var43 = -191353557 | (1470922617 ^ arg9)
    var44 = -246 + arg8 + arg9 & -239
    var45 = (546659885 - var43 ^ arg9) + arg8
    var46 = 710908187 - var42 & (var14 & var44)
    if var44 < var44:
        var47 = (arg8 - arg9) ^ var14
    else:
        var47 = var45 | var46 - var42 | var44
    var48 = var46 | var44 & (var46 ^ arg8)
    var49 = var45 + var45
    var50 = var14 + (var48 ^ var43)
    var51 = var44 - var49
    var52 = var48 ^ (-2114736290 ^ var49 ^ -702)
    var53 = var49 | var49
    var54 = var48 | var53
    var55 = var48 & var51
    if var51 < var46:
        var56 = var52 & (var45 & var54)
    else:
        var56 = var50 - var49 ^ 705152834
    var57 = var50 | ((var44 - arg9) ^ var49)
    var58 = var45 & (var42 - var48 & var50)
    var59 = var48 ^ var45 & (var51 & var42)
    var60 = (var51 & var53) ^ var52 + var44
    var61 = var14 ^ var53 ^ var53
    var62 = var50 ^ var48
    var63 = arg9 | var49
    var64 = 1473945669 + var57
    var65 = ((var57 - var42) + var63) & var43
    var66 = var61 | var55
    var67 = var14 + -835 & var62
    result = (var14 ^ (var49 | var14)) | var14 & -210
    return result
def func4(arg10, arg11):
    var12 = 0
    for var13 in [6 + (i & i) for i in xrange(22)]:
        var12 += (var13 - arg11) ^ arg10
    return var12
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(45):
        var5 += arg4 | var5
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
